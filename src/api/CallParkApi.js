/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ServiceDocsParkedcallGet from '../model/ServiceDocsParkedcallGet';
import UtilCPAASError from '../model/UtilCPAASError';

/**
* CallPark service.
* @module api/CallParkApi
* @version 1.1
*/
export default class CallParkApi {

    /**
    * Constructs a new CallParkApi. 
    * @alias module:api/CallParkApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1AccountAccountIDParkedcallGet operation.
     * @callback module:api/CallParkApi~v1AccountAccountIDParkedcallGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsParkedcallGet} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Call Park List
     * Retrieve a list of calls parked on hold in a numbered slot.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {module:api/CallParkApi~v1AccountAccountIDParkedcallGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsParkedcallGet}
     */
    v1AccountAccountIDParkedcallGet(accountID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDParkedcallGet");
      }

      let pathParams = {
        'accountID': accountID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsParkedcallGet;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/parkedcall', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
