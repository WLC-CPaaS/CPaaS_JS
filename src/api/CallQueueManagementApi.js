/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CPAASError from '../model/CPAASError';
import ServiceAPIResponse from '../model/ServiceAPIResponse';
import ServiceDocsCallQueueGetAll from '../model/ServiceDocsCallQueueGetAll';
import ServiceDocsCallQueueGetRoles from '../model/ServiceDocsCallQueueGetRoles';
import ServiceDocsCallQueueGetSingle from '../model/ServiceDocsCallQueueGetSingle';
import ServiceDocsCallQueueGetSingleStatus from '../model/ServiceDocsCallQueueGetSingleStatus';
import ServiceVOIPCallQueueAddEditData from '../model/ServiceVOIPCallQueueAddEditData';
import ServiceVOIPCallQueueRoleAssignData from '../model/ServiceVOIPCallQueueRoleAssignData';

/**
* CallQueueManagement service.
* @module api/CallQueueManagementApi
* @version 1.1
*/
export default class CallQueueManagementApi {

    /**
    * Constructs a new CallQueueManagementApi. 
    * @alias module:api/CallQueueManagementApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1AccountAccountIDCallqueueGet operation.
     * @callback module:api/CallQueueManagementApi~v1AccountAccountIDCallqueueGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsCallQueueGetAll} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Call Queues
     * Retrieve call queue details for an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {module:api/CallQueueManagementApi~v1AccountAccountIDCallqueueGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsCallQueueGetAll}
     */
    v1AccountAccountIDCallqueueGet(accountID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDCallqueueGet");
      }

      let pathParams = {
        'accountID': accountID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsCallQueueGetAll;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/callqueue', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDCallqueuePost operation.
     * @callback module:api/CallQueueManagementApi~v1AccountAccountIDCallqueuePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsCallQueueGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Call Queue
     * Set up a call queue in an account for specific inbound calls.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {module:model/ServiceVOIPCallQueueAddEditData} reqBody payload fields
     * @param {module:api/CallQueueManagementApi~v1AccountAccountIDCallqueuePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsCallQueueGetSingle}
     */
    v1AccountAccountIDCallqueuePost(accountID, reqBody, callback) {
      let postBody = reqBody;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDCallqueuePost");
      }
      // verify the required parameter 'reqBody' is set
      if (reqBody === undefined || reqBody === null) {
        throw new Error("Missing the required parameter 'reqBody' when calling v1AccountAccountIDCallqueuePost");
      }

      let pathParams = {
        'accountID': accountID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsCallQueueGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/callqueue', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDCallqueueQueueIDDelete operation.
     * @callback module:api/CallQueueManagementApi~v1AccountAccountIDCallqueueQueueIDDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsCallQueueGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Call Queue
     * Remove the call queue from an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} queueID Queue ID, 32 alpha numeric
     * @param {module:api/CallQueueManagementApi~v1AccountAccountIDCallqueueQueueIDDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsCallQueueGetSingle}
     */
    v1AccountAccountIDCallqueueQueueIDDelete(accountID, queueID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDCallqueueQueueIDDelete");
      }
      // verify the required parameter 'queueID' is set
      if (queueID === undefined || queueID === null) {
        throw new Error("Missing the required parameter 'queueID' when calling v1AccountAccountIDCallqueueQueueIDDelete");
      }

      let pathParams = {
        'accountID': accountID,
        'queueID': queueID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsCallQueueGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/callqueue/{queueID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDCallqueueQueueIDGet operation.
     * @callback module:api/CallQueueManagementApi~v1AccountAccountIDCallqueueQueueIDGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsCallQueueGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Call Queue Details
     * Capture metadata about a specific queue, such as queue_type and agent_wrapup_time.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} queueID Queue ID, 32 alpha numeric
     * @param {module:api/CallQueueManagementApi~v1AccountAccountIDCallqueueQueueIDGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsCallQueueGetSingle}
     */
    v1AccountAccountIDCallqueueQueueIDGet(accountID, queueID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDCallqueueQueueIDGet");
      }
      // verify the required parameter 'queueID' is set
      if (queueID === undefined || queueID === null) {
        throw new Error("Missing the required parameter 'queueID' when calling v1AccountAccountIDCallqueueQueueIDGet");
      }

      let pathParams = {
        'accountID': accountID,
        'queueID': queueID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsCallQueueGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/callqueue/{queueID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDCallqueueQueueIDPut operation.
     * @callback module:api/CallQueueManagementApi~v1AccountAccountIDCallqueueQueueIDPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsCallQueueGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Call Queue
     * Update the metadata mentioned above.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} queueID Queue ID, 32 alpha numeric
     * @param {module:model/ServiceVOIPCallQueueAddEditData} reqBody payload fields
     * @param {module:api/CallQueueManagementApi~v1AccountAccountIDCallqueueQueueIDPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsCallQueueGetSingle}
     */
    v1AccountAccountIDCallqueueQueueIDPut(accountID, queueID, reqBody, callback) {
      let postBody = reqBody;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDCallqueueQueueIDPut");
      }
      // verify the required parameter 'queueID' is set
      if (queueID === undefined || queueID === null) {
        throw new Error("Missing the required parameter 'queueID' when calling v1AccountAccountIDCallqueueQueueIDPut");
      }
      // verify the required parameter 'reqBody' is set
      if (reqBody === undefined || reqBody === null) {
        throw new Error("Missing the required parameter 'reqBody' when calling v1AccountAccountIDCallqueueQueueIDPut");
      }

      let pathParams = {
        'accountID': accountID,
        'queueID': queueID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsCallQueueGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/callqueue/{queueID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDCallqueueQueueIDStatusGet operation.
     * @callback module:api/CallQueueManagementApi~v1AccountAccountIDCallqueueQueueIDStatusGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsCallQueueGetSingleStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Call Queue Status
     * Access the status of a call queue in an account, such as the number of available agents (recipients), estimated wait time, and number of active sessions.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} queueID Queue ID, 32 alpha numeric
     * @param {module:api/CallQueueManagementApi~v1AccountAccountIDCallqueueQueueIDStatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsCallQueueGetSingleStatus}
     */
    v1AccountAccountIDCallqueueQueueIDStatusGet(accountID, queueID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDCallqueueQueueIDStatusGet");
      }
      // verify the required parameter 'queueID' is set
      if (queueID === undefined || queueID === null) {
        throw new Error("Missing the required parameter 'queueID' when calling v1AccountAccountIDCallqueueQueueIDStatusGet");
      }

      let pathParams = {
        'accountID': accountID,
        'queueID': queueID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsCallQueueGetSingleStatus;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/callqueue/{queueID}/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDQueuerolesGet operation.
     * @callback module:api/CallQueueManagementApi~v1AccountAccountIDQueuerolesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsCallQueueGetRoles} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Queue Roles of Account
     * Obtain data about each queue role in an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {module:api/CallQueueManagementApi~v1AccountAccountIDQueuerolesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsCallQueueGetRoles}
     */
    v1AccountAccountIDQueuerolesGet(accountID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDQueuerolesGet");
      }

      let pathParams = {
        'accountID': accountID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsCallQueueGetRoles;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/queueroles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDQueuerolesQueueIDPost operation.
     * @callback module:api/CallQueueManagementApi~v1AccountAccountIDQueuerolesQueueIDPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceAPIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Assign Queue Role to Call Queue
     * Assign roles to members in a call queue.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} queueID Queue ID, 32 alpha numeric
     * @param {module:model/ServiceVOIPCallQueueRoleAssignData} reqBody payload fields
     * @param {module:api/CallQueueManagementApi~v1AccountAccountIDQueuerolesQueueIDPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceAPIResponse}
     */
    v1AccountAccountIDQueuerolesQueueIDPost(accountID, queueID, reqBody, callback) {
      let postBody = reqBody;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDQueuerolesQueueIDPost");
      }
      // verify the required parameter 'queueID' is set
      if (queueID === undefined || queueID === null) {
        throw new Error("Missing the required parameter 'queueID' when calling v1AccountAccountIDQueuerolesQueueIDPost");
      }
      // verify the required parameter 'reqBody' is set
      if (reqBody === undefined || reqBody === null) {
        throw new Error("Missing the required parameter 'reqBody' when calling v1AccountAccountIDQueuerolesQueueIDPost");
      }

      let pathParams = {
        'accountID': accountID,
        'queueID': queueID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceAPIResponse;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/queueroles/{queueID}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
