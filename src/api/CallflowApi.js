/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ServiceCallflowAddEditData from '../model/ServiceCallflowAddEditData';
import ServiceDocsCallflowGetAll from '../model/ServiceDocsCallflowGetAll';
import ServiceDocsCallflowGetSingle from '../model/ServiceDocsCallflowGetSingle';
import UtilCPAASError from '../model/UtilCPAASError';

/**
* Callflow service.
* @module api/CallflowApi
* @version 1.1
*/
export default class CallflowApi {

    /**
    * Constructs a new CallflowApi. 
    * @alias module:api/CallflowApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1AccountAccountIDCallflowCallflowIDDelete operation.
     * @callback module:api/CallflowApi~v1AccountAccountIDCallflowCallflowIDDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsCallflowGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Call Group
     * Delete a callflow in an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} callflowID callflow ID, 32 alpha numeric
     * @param {module:api/CallflowApi~v1AccountAccountIDCallflowCallflowIDDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsCallflowGetSingle}
     */
    v1AccountAccountIDCallflowCallflowIDDelete(accountID, callflowID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDCallflowCallflowIDDelete");
      }
      // verify the required parameter 'callflowID' is set
      if (callflowID === undefined || callflowID === null) {
        throw new Error("Missing the required parameter 'callflowID' when calling v1AccountAccountIDCallflowCallflowIDDelete");
      }

      let pathParams = {
        'accountID': accountID,
        'callflowID': callflowID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsCallflowGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/callflow/{callflowID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDCallflowCallflowIDGet operation.
     * @callback module:api/CallflowApi~v1AccountAccountIDCallflowCallflowIDGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsCallflowGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Call Group Details
     * Get the details for a single callflow in an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} callflowID Callflow ID, 32 alpha numeric
     * @param {module:api/CallflowApi~v1AccountAccountIDCallflowCallflowIDGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsCallflowGetSingle}
     */
    v1AccountAccountIDCallflowCallflowIDGet(accountID, callflowID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDCallflowCallflowIDGet");
      }
      // verify the required parameter 'callflowID' is set
      if (callflowID === undefined || callflowID === null) {
        throw new Error("Missing the required parameter 'callflowID' when calling v1AccountAccountIDCallflowCallflowIDGet");
      }

      let pathParams = {
        'accountID': accountID,
        'callflowID': callflowID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsCallflowGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/callflow/{callflowID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDCallflowCallflowIDPut operation.
     * @callback module:api/CallflowApi~v1AccountAccountIDCallflowCallflowIDPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsCallflowGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Call Group
     * Update the details for a single callflow in an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} callflowID Callflow ID, 32 alpha numeric
     * @param {module:model/ServiceCallflowAddEditData} reqBody payload fields
     * @param {module:api/CallflowApi~v1AccountAccountIDCallflowCallflowIDPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsCallflowGetSingle}
     */
    v1AccountAccountIDCallflowCallflowIDPut(accountID, callflowID, reqBody, callback) {
      let postBody = reqBody;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDCallflowCallflowIDPut");
      }
      // verify the required parameter 'callflowID' is set
      if (callflowID === undefined || callflowID === null) {
        throw new Error("Missing the required parameter 'callflowID' when calling v1AccountAccountIDCallflowCallflowIDPut");
      }
      // verify the required parameter 'reqBody' is set
      if (reqBody === undefined || reqBody === null) {
        throw new Error("Missing the required parameter 'reqBody' when calling v1AccountAccountIDCallflowCallflowIDPut");
      }

      let pathParams = {
        'accountID': accountID,
        'callflowID': callflowID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsCallflowGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/callflow/{callflowID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDCallflowGet operation.
     * @callback module:api/CallflowApi~v1AccountAccountIDCallflowGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsCallflowGetAll} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Callflow List
     * Permit a user to view the callflow details in an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {Object} opts Optional parameters
     * @param {String} [startKey] start_key for pagination that was returned as next_start_key from your previous call
     * @param {Number} [pageSize] number of records to return, range 1 to 50
     * @param {module:api/CallflowApi~v1AccountAccountIDCallflowGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsCallflowGetAll}
     */
    v1AccountAccountIDCallflowGet(accountID, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDCallflowGet");
      }

      let pathParams = {
        'accountID': accountID
      };
      let queryParams = {
        'start_key': opts['startKey'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsCallflowGetAll;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/callflow', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDCallflowPost operation.
     * @callback module:api/CallflowApi~v1AccountAccountIDCallflowPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsCallflowGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Call Group
     * Create instructions for routing a call to a user or system.
     * @param {String} accountID Account ID, 32 alpha-numeric
     * @param {module:model/ServiceCallflowAddEditData} request Call flow configuration
     * @param {module:api/CallflowApi~v1AccountAccountIDCallflowPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsCallflowGetSingle}
     */
    v1AccountAccountIDCallflowPost(accountID, request, callback) {
      let postBody = request;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDCallflowPost");
      }
      // verify the required parameter 'request' is set
      if (request === undefined || request === null) {
        throw new Error("Missing the required parameter 'request' when calling v1AccountAccountIDCallflowPost");
      }

      let pathParams = {
        'accountID': accountID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsCallflowGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/callflow', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
