/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CPAASError from '../model/CPAASError';
import ServiceAPIResponse from '../model/ServiceAPIResponse';
import ServiceDocsChannelGetAll from '../model/ServiceDocsChannelGetAll';
import ServiceDocsChannelGetSingle from '../model/ServiceDocsChannelGetSingle';
import ServiceVOIPChannelRunActionData from '../model/ServiceVOIPChannelRunActionData';
import ServiceVOIPChannelRunMetaflowData from '../model/ServiceVOIPChannelRunMetaflowData';

/**
* Channel service.
* @module api/ChannelApi
* @version 1.1
*/
export default class ChannelApi {

    /**
    * Constructs a new ChannelApi. 
    * @alias module:api/ChannelApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1AccountAccountIDChannelChannelIDGet operation.
     * @callback module:api/ChannelApi~v1AccountAccountIDChannelChannelIDGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsChannelGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Channel Details
     * Access details about each channel in an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} channelID Channel ID
     * @param {module:api/ChannelApi~v1AccountAccountIDChannelChannelIDGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsChannelGetSingle}
     */
    v1AccountAccountIDChannelChannelIDGet(accountID, channelID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDChannelChannelIDGet");
      }
      // verify the required parameter 'channelID' is set
      if (channelID === undefined || channelID === null) {
        throw new Error("Missing the required parameter 'channelID' when calling v1AccountAccountIDChannelChannelIDGet");
      }

      let pathParams = {
        'accountID': accountID,
        'channelID': channelID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsChannelGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/channel/{channelID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDChannelChannelIDPost operation.
     * @callback module:api/ChannelApi~v1AccountAccountIDChannelChannelIDPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceAPIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Associate Action to Channel
     * Link an action, such as transfer or hangup to a channel.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} channelID Channel ID
     * @param {module:model/ServiceVOIPChannelRunActionData} reqBody payload fields
     * @param {module:api/ChannelApi~v1AccountAccountIDChannelChannelIDPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceAPIResponse}
     */
    v1AccountAccountIDChannelChannelIDPost(accountID, channelID, reqBody, callback) {
      let postBody = reqBody;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDChannelChannelIDPost");
      }
      // verify the required parameter 'channelID' is set
      if (channelID === undefined || channelID === null) {
        throw new Error("Missing the required parameter 'channelID' when calling v1AccountAccountIDChannelChannelIDPost");
      }
      // verify the required parameter 'reqBody' is set
      if (reqBody === undefined || reqBody === null) {
        throw new Error("Missing the required parameter 'reqBody' when calling v1AccountAccountIDChannelChannelIDPost");
      }

      let pathParams = {
        'accountID': accountID,
        'channelID': channelID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceAPIResponse;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/channel/{channelID}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDChannelChannelIDPut operation.
     * @callback module:api/ChannelApi~v1AccountAccountIDChannelChannelIDPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceAPIResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Associate Metaflow to Channel
     * Link a metaflow to an active channel.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} channelID Channel ID
     * @param {module:model/ServiceVOIPChannelRunMetaflowData} reqBody payload fields
     * @param {module:api/ChannelApi~v1AccountAccountIDChannelChannelIDPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceAPIResponse}
     */
    v1AccountAccountIDChannelChannelIDPut(accountID, channelID, reqBody, callback) {
      let postBody = reqBody;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDChannelChannelIDPut");
      }
      // verify the required parameter 'channelID' is set
      if (channelID === undefined || channelID === null) {
        throw new Error("Missing the required parameter 'channelID' when calling v1AccountAccountIDChannelChannelIDPut");
      }
      // verify the required parameter 'reqBody' is set
      if (reqBody === undefined || reqBody === null) {
        throw new Error("Missing the required parameter 'reqBody' when calling v1AccountAccountIDChannelChannelIDPut");
      }

      let pathParams = {
        'accountID': accountID,
        'channelID': channelID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceAPIResponse;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/channel/{channelID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDChannelGet operation.
     * @callback module:api/ChannelApi~v1AccountAccountIDChannelGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsChannelGetAll} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Account Channel List
     * Get a list of active channels for an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {module:api/ChannelApi~v1AccountAccountIDChannelGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsChannelGetAll}
     */
    v1AccountAccountIDChannelGet(accountID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDChannelGet");
      }

      let pathParams = {
        'accountID': accountID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsChannelGetAll;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/channel', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDDeviceDeviceIDChannelGet operation.
     * @callback module:api/ChannelApi~v1AccountAccountIDDeviceDeviceIDChannelGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsChannelGetAll} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Device Channel List
     * Get the list of active channels for a device.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} deviceID Device ID, 32 alpha numeric
     * @param {module:api/ChannelApi~v1AccountAccountIDDeviceDeviceIDChannelGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsChannelGetAll}
     */
    v1AccountAccountIDDeviceDeviceIDChannelGet(accountID, deviceID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDDeviceDeviceIDChannelGet");
      }
      // verify the required parameter 'deviceID' is set
      if (deviceID === undefined || deviceID === null) {
        throw new Error("Missing the required parameter 'deviceID' when calling v1AccountAccountIDDeviceDeviceIDChannelGet");
      }

      let pathParams = {
        'accountID': accountID,
        'deviceID': deviceID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsChannelGetAll;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/device/{deviceID}/channel', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDUserUserIDChannelGet operation.
     * @callback module:api/ChannelApi~v1AccountAccountIDUserUserIDChannelGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsChannelGetAll} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get User Channel List
     * Get the list of active channels for a user.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} userID User ID, 32 alpha numeric
     * @param {module:api/ChannelApi~v1AccountAccountIDUserUserIDChannelGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsChannelGetAll}
     */
    v1AccountAccountIDUserUserIDChannelGet(accountID, userID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDUserUserIDChannelGet");
      }
      // verify the required parameter 'userID' is set
      if (userID === undefined || userID === null) {
        throw new Error("Missing the required parameter 'userID' when calling v1AccountAccountIDUserUserIDChannelGet");
      }

      let pathParams = {
        'accountID': accountID,
        'userID': userID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsChannelGetAll;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/user/{userID}/channel', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
