/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CPAASError from '../model/CPAASError';
import ServiceDocsDeviceGetAll from '../model/ServiceDocsDeviceGetAll';
import ServiceDocsDeviceGetSingle from '../model/ServiceDocsDeviceGetSingle';
import ServiceDocsDeviceReboot from '../model/ServiceDocsDeviceReboot';
import ServiceDocsDeviceStatus from '../model/ServiceDocsDeviceStatus';
import ServiceVOIPDeviceAddEdit2 from '../model/ServiceVOIPDeviceAddEdit2';

/**
* Device service.
* @module api/DeviceApi
* @version 1.1
*/
export default class DeviceApi {

    /**
    * Constructs a new DeviceApi. 
    * @alias module:api/DeviceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1AccountAccountidDeviceDeviceidDelete operation.
     * @callback module:api/DeviceApi~v1AccountAccountidDeviceDeviceidDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsDeviceGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Device
     * Remove one device from a CPaaS account.
     * @param {String} accountid Account ID, 32 alpha numeric
     * @param {String} deviceid Device ID, 32 alpha numeric
     * @param {module:api/DeviceApi~v1AccountAccountidDeviceDeviceidDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsDeviceGetSingle}
     */
    v1AccountAccountidDeviceDeviceidDelete(accountid, deviceid, callback) {
      let postBody = null;
      // verify the required parameter 'accountid' is set
      if (accountid === undefined || accountid === null) {
        throw new Error("Missing the required parameter 'accountid' when calling v1AccountAccountidDeviceDeviceidDelete");
      }
      // verify the required parameter 'deviceid' is set
      if (deviceid === undefined || deviceid === null) {
        throw new Error("Missing the required parameter 'deviceid' when calling v1AccountAccountidDeviceDeviceidDelete");
      }

      let pathParams = {
        'accountid': accountid,
        'deviceid': deviceid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsDeviceGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountid}/device/{deviceid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountidDeviceDeviceidGet operation.
     * @callback module:api/DeviceApi~v1AccountAccountidDeviceDeviceidGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsDeviceGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Device Details
     * Permit a user to view specific device details.
     * @param {String} accountid Account ID, 32 alpha numeric
     * @param {String} deviceid Device ID, 32 alpha numeric
     * @param {module:api/DeviceApi~v1AccountAccountidDeviceDeviceidGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsDeviceGetSingle}
     */
    v1AccountAccountidDeviceDeviceidGet(accountid, deviceid, callback) {
      let postBody = null;
      // verify the required parameter 'accountid' is set
      if (accountid === undefined || accountid === null) {
        throw new Error("Missing the required parameter 'accountid' when calling v1AccountAccountidDeviceDeviceidGet");
      }
      // verify the required parameter 'deviceid' is set
      if (deviceid === undefined || deviceid === null) {
        throw new Error("Missing the required parameter 'deviceid' when calling v1AccountAccountidDeviceDeviceidGet");
      }

      let pathParams = {
        'accountid': accountid,
        'deviceid': deviceid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsDeviceGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountid}/device/{deviceid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountidDeviceDeviceidPut operation.
     * @callback module:api/DeviceApi~v1AccountAccountidDeviceDeviceidPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsDeviceGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Device
     * Edit specifics about the device, such as the device type, name, and owner.
     * @param {String} accountid Account ID, 32 alpha numeric
     * @param {String} deviceid Device ID, 32 alpha numeric
     * @param {module:model/ServiceVOIPDeviceAddEdit2} device device fields
     * @param {module:api/DeviceApi~v1AccountAccountidDeviceDeviceidPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsDeviceGetSingle}
     */
    v1AccountAccountidDeviceDeviceidPut(accountid, deviceid, device, callback) {
      let postBody = device;
      // verify the required parameter 'accountid' is set
      if (accountid === undefined || accountid === null) {
        throw new Error("Missing the required parameter 'accountid' when calling v1AccountAccountidDeviceDeviceidPut");
      }
      // verify the required parameter 'deviceid' is set
      if (deviceid === undefined || deviceid === null) {
        throw new Error("Missing the required parameter 'deviceid' when calling v1AccountAccountidDeviceDeviceidPut");
      }
      // verify the required parameter 'device' is set
      if (device === undefined || device === null) {
        throw new Error("Missing the required parameter 'device' when calling v1AccountAccountidDeviceDeviceidPut");
      }

      let pathParams = {
        'accountid': accountid,
        'deviceid': deviceid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsDeviceGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountid}/device/{deviceid}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountidDeviceDeviceidRebootPost operation.
     * @callback module:api/DeviceApi~v1AccountAccountidDeviceDeviceidRebootPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsDeviceReboot} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reboot Device
     * Reboot a device in an account to mitigate malware and improve device performance.
     * @param {String} accountid Account ID, 32 alpha numeric
     * @param {String} deviceid Device ID, 32 alpha numeric
     * @param {module:api/DeviceApi~v1AccountAccountidDeviceDeviceidRebootPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsDeviceReboot}
     */
    v1AccountAccountidDeviceDeviceidRebootPost(accountid, deviceid, callback) {
      let postBody = null;
      // verify the required parameter 'accountid' is set
      if (accountid === undefined || accountid === null) {
        throw new Error("Missing the required parameter 'accountid' when calling v1AccountAccountidDeviceDeviceidRebootPost");
      }
      // verify the required parameter 'deviceid' is set
      if (deviceid === undefined || deviceid === null) {
        throw new Error("Missing the required parameter 'deviceid' when calling v1AccountAccountidDeviceDeviceidRebootPost");
      }

      let pathParams = {
        'accountid': accountid,
        'deviceid': deviceid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsDeviceReboot;
      return this.apiClient.callApi(
        '/v1/account/{accountid}/device/{deviceid}/reboot', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountidDeviceGet operation.
     * @callback module:api/DeviceApi~v1AccountAccountidDeviceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsDeviceGetAll} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Device List
     * Obtain a list of all devices associated with an account such as fax machines, cell phones, and soft phones.
     * @param {String} accountid Account ID, 32 alpha numeric
     * @param {Object} opts Optional parameters
     * @param {String} [startKey] start_key for pagination that was returned as next_start_key from your previous call
     * @param {Number} [pageSize] number of records to return, range 1 to 50
     * @param {module:api/DeviceApi~v1AccountAccountidDeviceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsDeviceGetAll}
     */
    v1AccountAccountidDeviceGet(accountid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountid' is set
      if (accountid === undefined || accountid === null) {
        throw new Error("Missing the required parameter 'accountid' when calling v1AccountAccountidDeviceGet");
      }

      let pathParams = {
        'accountid': accountid
      };
      let queryParams = {
        'start_key': opts['startKey'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsDeviceGetAll;
      return this.apiClient.callApi(
        '/v1/account/{accountid}/device', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountidDevicePost operation.
     * @callback module:api/DeviceApi~v1AccountAccountidDevicePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsDeviceGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Device
     * Connect a new device to an account to enhance communication methods.
     * @param {String} accountid Account ID, 32 alpha numeric
     * @param {module:model/ServiceVOIPDeviceAddEdit2} device device fields
     * @param {module:api/DeviceApi~v1AccountAccountidDevicePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsDeviceGetSingle}
     */
    v1AccountAccountidDevicePost(accountid, device, callback) {
      let postBody = device;
      // verify the required parameter 'accountid' is set
      if (accountid === undefined || accountid === null) {
        throw new Error("Missing the required parameter 'accountid' when calling v1AccountAccountidDevicePost");
      }
      // verify the required parameter 'device' is set
      if (device === undefined || device === null) {
        throw new Error("Missing the required parameter 'device' when calling v1AccountAccountidDevicePost");
      }

      let pathParams = {
        'accountid': accountid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsDeviceGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountid}/device', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountidDeviceStatusGet operation.
     * @callback module:api/DeviceApi~v1AccountAccountidDeviceStatusGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsDeviceStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Device Status
     * Retrieve a device’s status (e.g., registered or not registered) in an account.
     * @param {String} accountid Account ID, 32 alpha numeric
     * @param {module:api/DeviceApi~v1AccountAccountidDeviceStatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsDeviceStatus}
     */
    v1AccountAccountidDeviceStatusGet(accountid, callback) {
      let postBody = null;
      // verify the required parameter 'accountid' is set
      if (accountid === undefined || accountid === null) {
        throw new Error("Missing the required parameter 'accountid' when calling v1AccountAccountidDeviceStatusGet");
      }

      let pathParams = {
        'accountid': accountid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsDeviceStatus;
      return this.apiClient.callApi(
        '/v1/account/{accountid}/device/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
