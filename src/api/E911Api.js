/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CPAASError from '../model/CPAASError';
import ServiceDocsE911ActiveLocationOutput from '../model/ServiceDocsE911ActiveLocationOutput';
import ServiceDocsE911ActiveLocationURIApiOutput from '../model/ServiceDocsE911ActiveLocationURIApiOutput';
import ServiceDocsE911AddLocationOutput from '../model/ServiceDocsE911AddLocationOutput';
import ServiceDocsE911LocationsURIApiOutput from '../model/ServiceDocsE911LocationsURIApiOutput';
import ServiceDocsE911RemoveLocationOutput from '../model/ServiceDocsE911RemoveLocationOutput';
import ServiceDocsE911RemoveURIApiOutput from '../model/ServiceDocsE911RemoveURIApiOutput';
import ServiceDocsE911URIsApiOutput from '../model/ServiceDocsE911URIsApiOutput';
import ServiceDocsE911ValidateLocationOutput from '../model/ServiceDocsE911ValidateLocationOutput';
import ServiceE911AddLocationInput from '../model/ServiceE911AddLocationInput';
import ServiceE911ValidateLocationInput from '../model/ServiceE911ValidateLocationInput';

/**
* E911 service.
* @module api/E911Api
* @version 1.1
*/
export default class E911Api {

    /**
    * Constructs a new E911Api. 
    * @alias module:api/E911Api
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1E911Get operation.
     * @callback module:api/E911Api~v1E911GetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsE911URIsApiOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get E911 List
     * Obtain e911 URIs associated with the provided account ID.
     * @param {module:api/E911Api~v1E911GetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsE911URIsApiOutput}
     */
    v1E911Get(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsE911URIsApiOutput;
      return this.apiClient.callApi(
        '/v1/e911', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1E911LocationLocationIDActivatePut operation.
     * @callback module:api/E911Api~v1E911LocationLocationIDActivatePutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsE911ActiveLocationOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Activate E911 Location
     * Edit the provision location.
     * @param {String} locationID Location ID
     * @param {module:api/E911Api~v1E911LocationLocationIDActivatePutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsE911ActiveLocationOutput}
     */
    v1E911LocationLocationIDActivatePut(locationID, callback) {
      let postBody = null;
      // verify the required parameter 'locationID' is set
      if (locationID === undefined || locationID === null) {
        throw new Error("Missing the required parameter 'locationID' when calling v1E911LocationLocationIDActivatePut");
      }

      let pathParams = {
        'locationID': locationID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsE911ActiveLocationOutput;
      return this.apiClient.callApi(
        '/v1/e911/location/{locationID}/activate', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1E911LocationLocationIDDelete operation.
     * @callback module:api/E911Api~v1E911LocationLocationIDDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsE911RemoveLocationOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete E911 Location
     * Remove the location.
     * @param {String} locationID Location ID
     * @param {module:api/E911Api~v1E911LocationLocationIDDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsE911RemoveLocationOutput}
     */
    v1E911LocationLocationIDDelete(locationID, callback) {
      let postBody = null;
      // verify the required parameter 'locationID' is set
      if (locationID === undefined || locationID === null) {
        throw new Error("Missing the required parameter 'locationID' when calling v1E911LocationLocationIDDelete");
      }

      let pathParams = {
        'locationID': locationID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsE911RemoveLocationOutput;
      return this.apiClient.callApi(
        '/v1/e911/location/{locationID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1E911LocationValidatePut operation.
     * @callback module:api/E911Api~v1E911LocationValidatePutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsE911ValidateLocationOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validate a Location
     * Validate the location details.
     * @param {module:model/ServiceE911ValidateLocationInput} reqBody location details
     * @param {module:api/E911Api~v1E911LocationValidatePutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsE911ValidateLocationOutput}
     */
    v1E911LocationValidatePut(reqBody, callback) {
      let postBody = reqBody;
      // verify the required parameter 'reqBody' is set
      if (reqBody === undefined || reqBody === null) {
        throw new Error("Missing the required parameter 'reqBody' when calling v1E911LocationValidatePut");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsE911ValidateLocationOutput;
      return this.apiClient.callApi(
        '/v1/e911/location/validate', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1E911PhoneNumberDelete operation.
     * @callback module:api/E911Api~v1E911PhoneNumberDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsE911RemoveURIApiOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete E911 Phone Number
     * Delete the e911 URI connected with the account URI.
     * @param {String} phoneNumber Phone Number
     * @param {module:api/E911Api~v1E911PhoneNumberDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsE911RemoveURIApiOutput}
     */
    v1E911PhoneNumberDelete(phoneNumber, callback) {
      let postBody = null;
      // verify the required parameter 'phoneNumber' is set
      if (phoneNumber === undefined || phoneNumber === null) {
        throw new Error("Missing the required parameter 'phoneNumber' when calling v1E911PhoneNumberDelete");
      }

      let pathParams = {
        'phoneNumber': phoneNumber
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsE911RemoveURIApiOutput;
      return this.apiClient.callApi(
        '/v1/e911/{phoneNumber}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1E911PhoneNumberLocationActiveGet operation.
     * @callback module:api/E911Api~v1E911PhoneNumberLocationActiveGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsE911ActiveLocationURIApiOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Actvie Location for a Phone Number
     * Get the e911 location connected with the URI.
     * @param {String} phoneNumber Phone Number
     * @param {module:api/E911Api~v1E911PhoneNumberLocationActiveGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsE911ActiveLocationURIApiOutput}
     */
    v1E911PhoneNumberLocationActiveGet(phoneNumber, callback) {
      let postBody = null;
      // verify the required parameter 'phoneNumber' is set
      if (phoneNumber === undefined || phoneNumber === null) {
        throw new Error("Missing the required parameter 'phoneNumber' when calling v1E911PhoneNumberLocationActiveGet");
      }

      let pathParams = {
        'phoneNumber': phoneNumber
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsE911ActiveLocationURIApiOutput;
      return this.apiClient.callApi(
        '/v1/e911/{phoneNumber}/location/active', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1E911PhoneNumberLocationGet operation.
     * @callback module:api/E911Api~v1E911PhoneNumberLocationGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsE911LocationsURIApiOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Location List for Phone Number
     * Access a list of the e911 locations associated with the provided URI.
     * @param {String} phoneNumber Phone Number
     * @param {module:api/E911Api~v1E911PhoneNumberLocationGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsE911LocationsURIApiOutput}
     */
    v1E911PhoneNumberLocationGet(phoneNumber, callback) {
      let postBody = null;
      // verify the required parameter 'phoneNumber' is set
      if (phoneNumber === undefined || phoneNumber === null) {
        throw new Error("Missing the required parameter 'phoneNumber' when calling v1E911PhoneNumberLocationGet");
      }

      let pathParams = {
        'phoneNumber': phoneNumber
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsE911LocationsURIApiOutput;
      return this.apiClient.callApi(
        '/v1/e911/{phoneNumber}/location', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1E911Post operation.
     * @callback module:api/E911Api~v1E911PostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsE911AddLocationOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an E911 Location
     * Enter new location details.
     * @param {module:model/ServiceE911AddLocationInput} reqBody location details
     * @param {module:api/E911Api~v1E911PostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsE911AddLocationOutput}
     */
    v1E911Post(reqBody, callback) {
      let postBody = reqBody;
      // verify the required parameter 'reqBody' is set
      if (reqBody === undefined || reqBody === null) {
        throw new Error("Missing the required parameter 'reqBody' when calling v1E911Post");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsE911AddLocationOutput;
      return this.apiClient.callApi(
        '/v1/e911', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
