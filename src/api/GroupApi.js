/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ServiceDocGroupGetAll from '../model/ServiceDocGroupGetAll';
import ServiceDocGroupGetSingle from '../model/ServiceDocGroupGetSingle';
import ServiceVOIPGroupAddEdit2 from '../model/ServiceVOIPGroupAddEdit2';
import UtilCPAASError from '../model/UtilCPAASError';

/**
* Group service.
* @module api/GroupApi
* @version 1.1
*/
export default class GroupApi {

    /**
    * Constructs a new GroupApi. 
    * @alias module:api/GroupApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1AccountAccountIDGroupGet operation.
     * @callback module:api/GroupApi~v1AccountAccountIDGroupGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocGroupGetAll} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Group List
     * Get a list of groups associated with an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {Object} opts Optional parameters
     * @param {String} [startKey] start_key for pagination that was returned as next_start_key from your previous call
     * @param {Number} [pageSize] number of records to return, range 1 to 50
     * @param {module:api/GroupApi~v1AccountAccountIDGroupGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocGroupGetAll}
     */
    v1AccountAccountIDGroupGet(accountID, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDGroupGet");
      }

      let pathParams = {
        'accountID': accountID
      };
      let queryParams = {
        'start_key': opts['startKey'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocGroupGetAll;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/group', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDGroupGroupIDDelete operation.
     * @callback module:api/GroupApi~v1AccountAccountIDGroupGroupIDDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocGroupGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Group
     * Delete a call group in an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} groupID group ID, 32 alpha numeric
     * @param {module:api/GroupApi~v1AccountAccountIDGroupGroupIDDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocGroupGetSingle}
     */
    v1AccountAccountIDGroupGroupIDDelete(accountID, groupID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDGroupGroupIDDelete");
      }
      // verify the required parameter 'groupID' is set
      if (groupID === undefined || groupID === null) {
        throw new Error("Missing the required parameter 'groupID' when calling v1AccountAccountIDGroupGroupIDDelete");
      }

      let pathParams = {
        'accountID': accountID,
        'groupID': groupID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocGroupGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/group/{groupID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDGroupGroupIDGet operation.
     * @callback module:api/GroupApi~v1AccountAccountIDGroupGroupIDGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocGroupGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Group Details
     * Access details about a single group within an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} groupID Group ID, 32 alpha numeric
     * @param {module:api/GroupApi~v1AccountAccountIDGroupGroupIDGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocGroupGetSingle}
     */
    v1AccountAccountIDGroupGroupIDGet(accountID, groupID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDGroupGroupIDGet");
      }
      // verify the required parameter 'groupID' is set
      if (groupID === undefined || groupID === null) {
        throw new Error("Missing the required parameter 'groupID' when calling v1AccountAccountIDGroupGroupIDGet");
      }

      let pathParams = {
        'accountID': accountID,
        'groupID': groupID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocGroupGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/group/{groupID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDGroupGroupIDPut operation.
     * @callback module:api/GroupApi~v1AccountAccountIDGroupGroupIDPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocGroupGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Group
     * Modify the name, settings and other information for a group within an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} groupID Group ID, 32 alpha numeric
     * @param {module:model/ServiceVOIPGroupAddEdit2} reqBody payload fields
     * @param {module:api/GroupApi~v1AccountAccountIDGroupGroupIDPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocGroupGetSingle}
     */
    v1AccountAccountIDGroupGroupIDPut(accountID, groupID, reqBody, callback) {
      let postBody = reqBody;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDGroupGroupIDPut");
      }
      // verify the required parameter 'groupID' is set
      if (groupID === undefined || groupID === null) {
        throw new Error("Missing the required parameter 'groupID' when calling v1AccountAccountIDGroupGroupIDPut");
      }
      // verify the required parameter 'reqBody' is set
      if (reqBody === undefined || reqBody === null) {
        throw new Error("Missing the required parameter 'reqBody' when calling v1AccountAccountIDGroupGroupIDPut");
      }

      let pathParams = {
        'accountID': accountID,
        'groupID': groupID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocGroupGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/group/{groupID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDGroupPost operation.
     * @callback module:api/GroupApi~v1AccountAccountIDGroupPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocGroupGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Group
     * Provide an additional resource by adding a group list to an account.
     * @param {String} accountID Account ID
     * @param {module:model/ServiceVOIPGroupAddEdit2} group group fields
     * @param {module:api/GroupApi~v1AccountAccountIDGroupPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocGroupGetSingle}
     */
    v1AccountAccountIDGroupPost(accountID, group, callback) {
      let postBody = group;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDGroupPost");
      }
      // verify the required parameter 'group' is set
      if (group === undefined || group === null) {
        throw new Error("Missing the required parameter 'group' when calling v1AccountAccountIDGroupPost");
      }

      let pathParams = {
        'accountID': accountID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocGroupGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/group', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
