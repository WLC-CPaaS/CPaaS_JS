/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package api;

import com.sun.jersey.api.client.GenericType;

import .ApiException;
import .ApiClient;
import .Configuration;
import model.*;
import .Pair;

import ServiceDocDailyAccountSummaryOutput;
import ServiceDocInvoiceOutput;
import ServiceDocMonthlySummaryOutput;
import UtilCPAASError;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@.annotation.Generated(value = "org.openapitools.codegen.languages.JavascriptClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class InvoiceApi {
  private ApiClient apiClient;

  public InvoiceApi() {
    this(Configuration.getDefaultApiClient());
  }

  public InvoiceApi(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * Get Daily Account Summary
   * Retrieve the daily account summary for the month, year, and component.
   * @param year Year of the century (required)
   * @param month Month of the year (required)
   * @param componentId Component id of the routes (required)
   * @return ServiceDocDailyAccountSummaryOutput
   * @throws ApiException if fails to make API call
   */
  public ServiceDocDailyAccountSummaryOutput v1FinanceDailyreportGet(String year, String month, String componentId) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'year' is set
    if (year == null) {
      throw new ApiException(400, "Missing the required parameter 'year' when calling v1FinanceDailyreportGet");
    }
    
    // verify the required parameter 'month' is set
    if (month == null) {
      throw new ApiException(400, "Missing the required parameter 'month' when calling v1FinanceDailyreportGet");
    }
    
    // verify the required parameter 'componentId' is set
    if (componentId == null) {
      throw new ApiException(400, "Missing the required parameter 'componentId' when calling v1FinanceDailyreportGet");
    }
    
    // create path and map variables
    String localVarPath = "/v1/finance/dailyreport";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPair("year", year));
    localVarQueryParams.addAll(apiClient.parameterToPair("month", month));
    localVarQueryParams.addAll(apiClient.parameterToPair("component_id", componentId));

    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "BearerAuth" };

    GenericType<ServiceDocDailyAccountSummaryOutput> localVarReturnType = new GenericType<ServiceDocDailyAccountSummaryOutput>() {};
    return apiClient.invokeAPI(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Get Invoice Summary
   * Get the invoice summary for the given month, year, and client.
   * @param year Invoice year (required)
   * @param month Invoice Month (required)
   * @return ServiceDocInvoiceOutput
   * @throws ApiException if fails to make API call
   */
  public ServiceDocInvoiceOutput v1FinanceInvoiceGet(String year, String month) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'year' is set
    if (year == null) {
      throw new ApiException(400, "Missing the required parameter 'year' when calling v1FinanceInvoiceGet");
    }
    
    // verify the required parameter 'month' is set
    if (month == null) {
      throw new ApiException(400, "Missing the required parameter 'month' when calling v1FinanceInvoiceGet");
    }
    
    // create path and map variables
    String localVarPath = "/v1/finance/invoice";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPair("year", year));
    localVarQueryParams.addAll(apiClient.parameterToPair("month", month));

    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "BearerAuth" };

    GenericType<ServiceDocInvoiceOutput> localVarReturnType = new GenericType<ServiceDocInvoiceOutput>() {};
    return apiClient.invokeAPI(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Get Monthly Summary
   * Obtain the monthly account summary for the month, year, and client.
   * @param year Invoice year (required)
   * @param month Invoice month (required)
   * @return ServiceDocMonthlySummaryOutput
   * @throws ApiException if fails to make API call
   */
  public ServiceDocMonthlySummaryOutput v1FinanceMonthlysummaryGet(String year, String month) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'year' is set
    if (year == null) {
      throw new ApiException(400, "Missing the required parameter 'year' when calling v1FinanceMonthlysummaryGet");
    }
    
    // verify the required parameter 'month' is set
    if (month == null) {
      throw new ApiException(400, "Missing the required parameter 'month' when calling v1FinanceMonthlysummaryGet");
    }
    
    // create path and map variables
    String localVarPath = "/v1/finance/monthlysummary";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPair("year", year));
    localVarQueryParams.addAll(apiClient.parameterToPair("month", month));

    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "BearerAuth" };

    GenericType<ServiceDocMonthlySummaryOutput> localVarReturnType = new GenericType<ServiceDocMonthlySummaryOutput>() {};
    return apiClient.invokeAPI(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
}
