/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package api;

import com.sun.jersey.api.client.GenericType;

import .ApiException;
import .ApiClient;
import .Configuration;
import model.*;
import .Pair;

import ServiceAPIResponseStatusCodeOnly;
import ServiceDocsAccountPhonenumberGetAll;
import ServiceDocsOrderPhonenumber;
import ServiceDocsPhonenumberAssignPayload;
import ServiceDocsPhonenumberSearchGetAll;
import ServiceDocsPhonenumberUnassignPayload;
import ServiceTelephoneNumberList;
import UtilCPAASError;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@.annotation.Generated(value = "org.openapitools.codegen.languages.JavascriptClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class PhoneNumberApi {
  private ApiClient apiClient;

  public PhoneNumberApi() {
    this(Configuration.getDefaultApiClient());
  }

  public PhoneNumberApi(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * Get Assigned Numbers List
   * Access all phone numbers assigned to a CPaaS account.
   * @param accountid Account ID, 32 alpha numeric (required)
   * @param startKey Start key for pagination, obtained from previous responses (optional)
   * @param pageSize Number of records to return per page (range: 1 to 50) (optional)
   * @return ServiceDocsAccountPhonenumberGetAll
   * @throws ApiException if fails to make API call
   */
  public ServiceDocsAccountPhonenumberGetAll v1AccountAccountidPhonenumberGet(String accountid, String startKey, Number pageSize) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'accountid' is set
    if (accountid == null) {
      throw new ApiException(400, "Missing the required parameter 'accountid' when calling v1AccountAccountidPhonenumberGet");
    }
    
    // create path and map variables
    String localVarPath = "/v1/account/{accountid}/phonenumber"
      .replaceAll("\\{" + "accountid" + "\\}", apiClient.escapeString(accountid.toString()));

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPair("start_key", startKey));
    localVarQueryParams.addAll(apiClient.parameterToPair("page_size", pageSize));

    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "BearerAuth" };

    GenericType<ServiceDocsAccountPhonenumberGetAll> localVarReturnType = new GenericType<ServiceDocsAccountPhonenumberGetAll>() {};
    return apiClient.invokeAPI(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Assign Number
   * Assign a purchased phone number to an account.
   * @param payload assignment payload (required)
   * @return ServiceAPIResponseStatusCodeOnly
   * @throws ApiException if fails to make API call
   */
  public ServiceAPIResponseStatusCodeOnly v1AccountPhonenumberAssignPost(ServiceDocsPhonenumberAssignPayload payload) throws ApiException {
    Object localVarPostBody = payload;
    
    // verify the required parameter 'payload' is set
    if (payload == null) {
      throw new ApiException(400, "Missing the required parameter 'payload' when calling v1AccountPhonenumberAssignPost");
    }
    
    // create path and map variables
    String localVarPath = "/v1/account/phonenumber/assign";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "BearerAuth" };

    GenericType<ServiceAPIResponseStatusCodeOnly> localVarReturnType = new GenericType<ServiceAPIResponseStatusCodeOnly>() {};
    return apiClient.invokeAPI(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Disconnect Number
   * Disconnecting a phone number from a CPaaS account relinquishes ownership of the number back to the carrier.
   * @param payload disconnect payload (required)
   * @return ServiceAPIResponseStatusCodeOnly
   * @throws ApiException if fails to make API call
   */
  public ServiceAPIResponseStatusCodeOnly v1AccountPhonenumberDisconnectPost(ServiceDocsPhonenumberUnassignPayload payload) throws ApiException {
    Object localVarPostBody = payload;
    
    // verify the required parameter 'payload' is set
    if (payload == null) {
      throw new ApiException(400, "Missing the required parameter 'payload' when calling v1AccountPhonenumberDisconnectPost");
    }
    
    // create path and map variables
    String localVarPath = "/v1/account/phonenumber/disconnect";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "BearerAuth" };

    GenericType<ServiceAPIResponseStatusCodeOnly> localVarReturnType = new GenericType<ServiceAPIResponseStatusCodeOnly>() {};
    return apiClient.invokeAPI(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Get Unassigned Numbers List
   * Obtain all phone numbers that have not been assigned to a CPaaS account within your organization.
   * @param startKey Start key for pagination, obtained from previous responses (optional)
   * @param pageSize Number of records to return per page (range: 1 to 50) (optional)
   * @return ServiceDocsAccountPhonenumberGetAll
   * @throws ApiException if fails to make API call
   */
  public ServiceDocsAccountPhonenumberGetAll v1AccountPhonenumberGet(String startKey, Number pageSize) throws ApiException {
    Object localVarPostBody = null;
    
    // create path and map variables
    String localVarPath = "/v1/account/phonenumber";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPair("start_key", startKey));
    localVarQueryParams.addAll(apiClient.parameterToPair("page_size", pageSize));

    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "BearerAuth" };

    GenericType<ServiceDocsAccountPhonenumberGetAll> localVarReturnType = new GenericType<ServiceDocsAccountPhonenumberGetAll>() {};
    return apiClient.invokeAPI(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Purchase Number
   * Purchase or activate a phone number for CPaaS accounts within your business.
   * @param phonenumber phonenumber fields (required)
   * @return ServiceDocsOrderPhonenumber
   * @throws ApiException if fails to make API call
   */
  public ServiceDocsOrderPhonenumber v1AccountPhonenumberPost(ServiceTelephoneNumberList phonenumber) throws ApiException {
    Object localVarPostBody = phonenumber;
    
    // verify the required parameter 'phonenumber' is set
    if (phonenumber == null) {
      throw new ApiException(400, "Missing the required parameter 'phonenumber' when calling v1AccountPhonenumberPost");
    }
    
    // create path and map variables
    String localVarPath = "/v1/account/phonenumber";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "BearerAuth" };

    GenericType<ServiceDocsOrderPhonenumber> localVarReturnType = new GenericType<ServiceDocsOrderPhonenumber>() {};
    return apiClient.invokeAPI(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Unassign Number
   * Remove a phone number from an account and place it back on the list of unassigned phone numbers.
   * @param payload unassign payload (required)
   * @return ServiceAPIResponseStatusCodeOnly
   * @throws ApiException if fails to make API call
   */
  public ServiceAPIResponseStatusCodeOnly v1AccountPhonenumberUnassignPost(ServiceDocsPhonenumberUnassignPayload payload) throws ApiException {
    Object localVarPostBody = payload;
    
    // verify the required parameter 'payload' is set
    if (payload == null) {
      throw new ApiException(400, "Missing the required parameter 'payload' when calling v1AccountPhonenumberUnassignPost");
    }
    
    // create path and map variables
    String localVarPath = "/v1/account/phonenumber/unassign";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "BearerAuth" };

    GenericType<ServiceAPIResponseStatusCodeOnly> localVarReturnType = new GenericType<ServiceAPIResponseStatusCodeOnly>() {};
    return apiClient.invokeAPI(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Search New Numbers
   * Conduct a search for available phone numbers for purchase within an area code.
   * @param areaCode Area code (exactly 3 numeric characters) example: 610 or 484 (required)
   * @param quantity Number of records to return (range: 1 to 100, defaults to 100 if not provided) (optional, default to 100)
   * @return ServiceDocsPhonenumberSearchGetAll
   * @throws ApiException if fails to make API call
   */
  public ServiceDocsPhonenumberSearchGetAll v1PhonenumberSearchGet(String areaCode, Number quantity) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'areaCode' is set
    if (areaCode == null) {
      throw new ApiException(400, "Missing the required parameter 'areaCode' when calling v1PhonenumberSearchGet");
    }
    
    // create path and map variables
    String localVarPath = "/v1/phonenumber/search";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPair("area_code", areaCode));
    localVarQueryParams.addAll(apiClient.parameterToPair("quantity", quantity));

    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "BearerAuth" };

    GenericType<ServiceDocsPhonenumberSearchGetAll> localVarReturnType = new GenericType<ServiceDocsPhonenumberSearchGetAll>() {};
    return apiClient.invokeAPI(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
}
