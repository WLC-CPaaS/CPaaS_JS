/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ServiceAPIResponseStatusCodeOnly from '../model/ServiceAPIResponseStatusCodeOnly';
import ServiceDocsAccountPhonenumberGetAll from '../model/ServiceDocsAccountPhonenumberGetAll';
import ServiceDocsOrderPhonenumber from '../model/ServiceDocsOrderPhonenumber';
import ServiceDocsPhonenumberAssignPayload from '../model/ServiceDocsPhonenumberAssignPayload';
import ServiceDocsPhonenumberSearchGetAll from '../model/ServiceDocsPhonenumberSearchGetAll';
import ServiceDocsPhonenumberUnassignPayload from '../model/ServiceDocsPhonenumberUnassignPayload';
import ServiceTelephoneNumberList from '../model/ServiceTelephoneNumberList';
import UtilCPAASError from '../model/UtilCPAASError';

/**
* PhoneNumber service.
* @module api/PhoneNumberApi
* @version 1.1
*/
export default class PhoneNumberApi {

    /**
    * Constructs a new PhoneNumberApi. 
    * @alias module:api/PhoneNumberApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1AccountAccountidPhonenumberGet operation.
     * @callback module:api/PhoneNumberApi~v1AccountAccountidPhonenumberGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsAccountPhonenumberGetAll} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Assigned Numbers List
     * Access all phone numbers assigned to a CPaaS account.
     * @param {String} accountid Account ID, 32 alpha numeric
     * @param {Object} opts Optional parameters
     * @param {String} [startKey] Start key for pagination, obtained from previous responses
     * @param {Number} [pageSize] Number of records to return per page (range: 1 to 50)
     * @param {module:api/PhoneNumberApi~v1AccountAccountidPhonenumberGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsAccountPhonenumberGetAll}
     */
    v1AccountAccountidPhonenumberGet(accountid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountid' is set
      if (accountid === undefined || accountid === null) {
        throw new Error("Missing the required parameter 'accountid' when calling v1AccountAccountidPhonenumberGet");
      }

      let pathParams = {
        'accountid': accountid
      };
      let queryParams = {
        'start_key': opts['startKey'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsAccountPhonenumberGetAll;
      return this.apiClient.callApi(
        '/v1/account/{accountid}/phonenumber', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountPhonenumberAssignPost operation.
     * @callback module:api/PhoneNumberApi~v1AccountPhonenumberAssignPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceAPIResponseStatusCodeOnly} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Assign Number
     * Assign a purchased phone number to an account.
     * @param {module:model/ServiceDocsPhonenumberAssignPayload} payload assignment payload
     * @param {module:api/PhoneNumberApi~v1AccountPhonenumberAssignPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceAPIResponseStatusCodeOnly}
     */
    v1AccountPhonenumberAssignPost(payload, callback) {
      let postBody = payload;
      // verify the required parameter 'payload' is set
      if (payload === undefined || payload === null) {
        throw new Error("Missing the required parameter 'payload' when calling v1AccountPhonenumberAssignPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceAPIResponseStatusCodeOnly;
      return this.apiClient.callApi(
        '/v1/account/phonenumber/assign', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountPhonenumberDisconnectPost operation.
     * @callback module:api/PhoneNumberApi~v1AccountPhonenumberDisconnectPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceAPIResponseStatusCodeOnly} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disconnect Number
     * Disconnecting a phone number from a CPaaS account relinquishes ownership of the number back to the carrier.
     * @param {module:model/ServiceDocsPhonenumberUnassignPayload} payload disconnect payload
     * @param {module:api/PhoneNumberApi~v1AccountPhonenumberDisconnectPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceAPIResponseStatusCodeOnly}
     */
    v1AccountPhonenumberDisconnectPost(payload, callback) {
      let postBody = payload;
      // verify the required parameter 'payload' is set
      if (payload === undefined || payload === null) {
        throw new Error("Missing the required parameter 'payload' when calling v1AccountPhonenumberDisconnectPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceAPIResponseStatusCodeOnly;
      return this.apiClient.callApi(
        '/v1/account/phonenumber/disconnect', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountPhonenumberGet operation.
     * @callback module:api/PhoneNumberApi~v1AccountPhonenumberGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsAccountPhonenumberGetAll} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Unassigned Numbers List
     * Obtain all phone numbers that have not been assigned to a CPaaS account within your organization.
     * @param {Object} opts Optional parameters
     * @param {String} [startKey] Start key for pagination, obtained from previous responses
     * @param {Number} [pageSize] Number of records to return per page (range: 1 to 50)
     * @param {module:api/PhoneNumberApi~v1AccountPhonenumberGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsAccountPhonenumberGetAll}
     */
    v1AccountPhonenumberGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'start_key': opts['startKey'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsAccountPhonenumberGetAll;
      return this.apiClient.callApi(
        '/v1/account/phonenumber', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountPhonenumberPost operation.
     * @callback module:api/PhoneNumberApi~v1AccountPhonenumberPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsOrderPhonenumber} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Purchase Number
     * Purchase or activate a phone number for CPaaS accounts within your business.
     * @param {module:model/ServiceTelephoneNumberList} phonenumber phonenumber fields
     * @param {module:api/PhoneNumberApi~v1AccountPhonenumberPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsOrderPhonenumber}
     */
    v1AccountPhonenumberPost(phonenumber, callback) {
      let postBody = phonenumber;
      // verify the required parameter 'phonenumber' is set
      if (phonenumber === undefined || phonenumber === null) {
        throw new Error("Missing the required parameter 'phonenumber' when calling v1AccountPhonenumberPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsOrderPhonenumber;
      return this.apiClient.callApi(
        '/v1/account/phonenumber', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountPhonenumberUnassignPost operation.
     * @callback module:api/PhoneNumberApi~v1AccountPhonenumberUnassignPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceAPIResponseStatusCodeOnly} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Unassign Number
     * Remove a phone number from an account and place it back on the list of unassigned phone numbers.
     * @param {module:model/ServiceDocsPhonenumberUnassignPayload} payload unassign payload
     * @param {module:api/PhoneNumberApi~v1AccountPhonenumberUnassignPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceAPIResponseStatusCodeOnly}
     */
    v1AccountPhonenumberUnassignPost(payload, callback) {
      let postBody = payload;
      // verify the required parameter 'payload' is set
      if (payload === undefined || payload === null) {
        throw new Error("Missing the required parameter 'payload' when calling v1AccountPhonenumberUnassignPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceAPIResponseStatusCodeOnly;
      return this.apiClient.callApi(
        '/v1/account/phonenumber/unassign', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1PhonenumberSearchGet operation.
     * @callback module:api/PhoneNumberApi~v1PhonenumberSearchGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsPhonenumberSearchGetAll} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search New Numbers
     * Conduct a search for available phone numbers for purchase within an area code.
     * @param {String} areaCode Area code (exactly 3 numeric characters) example: 610 or 484
     * @param {Object} opts Optional parameters
     * @param {Number} [quantity = 100)] Number of records to return (range: 1 to 100, defaults to 100 if not provided)
     * @param {module:api/PhoneNumberApi~v1PhonenumberSearchGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsPhonenumberSearchGetAll}
     */
    v1PhonenumberSearchGet(areaCode, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'areaCode' is set
      if (areaCode === undefined || areaCode === null) {
        throw new Error("Missing the required parameter 'areaCode' when calling v1PhonenumberSearchGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'area_code': areaCode,
        'quantity': opts['quantity']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsPhonenumberSearchGetAll;
      return this.apiClient.callApi(
        '/v1/phonenumber/search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
