/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ModelsGenerateConfigFileRequest from '../model/ModelsGenerateConfigFileRequest';
import ProvisioningDocsDocsBrandOutputSingle from '../model/ProvisioningDocsDocsBrandOutputSingle';
import ProvisioningDocsDocsBrandsOutput from '../model/ProvisioningDocsDocsBrandsOutput';
import ProvisioningDocsDocsConfigFileOutput from '../model/ProvisioningDocsDocsConfigFileOutput';
import ProvisioningDocsDocsFamilyOutput from '../model/ProvisioningDocsDocsFamilyOutput';
import ProvisioningDocsDocsFamilyOutputSingle from '../model/ProvisioningDocsDocsFamilyOutputSingle';
import ProvisioningDocsDocsModelOutput from '../model/ProvisioningDocsDocsModelOutput';
import ProvisioningDocsDocsModelOutputSingle from '../model/ProvisioningDocsDocsModelOutputSingle';
import ProvisioningDocsDocsTemplateOutputSingle from '../model/ProvisioningDocsDocsTemplateOutputSingle';
import ProvisioningDocsDocsTemplatesOutput from '../model/ProvisioningDocsDocsTemplatesOutput';
import ResponseProvisionError from '../model/ResponseProvisionError';

/**
* Provisioning service.
* @module api/ProvisioningApi
* @version 1.1
*/
export default class ProvisioningApi {

    /**
    * Constructs a new ProvisioningApi. 
    * @alias module:api/ProvisioningApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1ApBrandBrandFamilyFamilyGet operation.
     * @callback module:api/ProvisioningApi~v1ApBrandBrandFamilyFamilyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProvisioningDocsDocsFamilyOutputSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Family
     * Retrieve a family's details by the randomly generated ID.
     * @param {String} brand brand
     * @param {String} family family
     * @param {module:api/ProvisioningApi~v1ApBrandBrandFamilyFamilyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProvisioningDocsDocsFamilyOutputSingle}
     */
    v1ApBrandBrandFamilyFamilyGet(brand, family, callback) {
      let postBody = null;
      // verify the required parameter 'brand' is set
      if (brand === undefined || brand === null) {
        throw new Error("Missing the required parameter 'brand' when calling v1ApBrandBrandFamilyFamilyGet");
      }
      // verify the required parameter 'family' is set
      if (family === undefined || family === null) {
        throw new Error("Missing the required parameter 'family' when calling v1ApBrandBrandFamilyFamilyGet");
      }

      let pathParams = {
        'brand': brand,
        'family': family
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProvisioningDocsDocsFamilyOutputSingle;
      return this.apiClient.callApi(
        '/v1/ap/brand/{brand}/family/{family}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1ApBrandBrandFamilyFamilyModelGet operation.
     * @callback module:api/ProvisioningApi~v1ApBrandBrandFamilyFamilyModelGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProvisioningDocsDocsModelOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Model List
     * Retrieve a list of all models within a family for a brand (e.g., Yealink and Polycom).
     * @param {String} brand brand
     * @param {String} family family
     * @param {Object} opts Optional parameters
     * @param {String} [modelName] 
     * @param {Number} [pageSize] 
     * @param {String} [startKey] 
     * @param {module:model/String} [status] 
     * @param {module:api/ProvisioningApi~v1ApBrandBrandFamilyFamilyModelGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProvisioningDocsDocsModelOutput}
     */
    v1ApBrandBrandFamilyFamilyModelGet(brand, family, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'brand' is set
      if (brand === undefined || brand === null) {
        throw new Error("Missing the required parameter 'brand' when calling v1ApBrandBrandFamilyFamilyModelGet");
      }
      // verify the required parameter 'family' is set
      if (family === undefined || family === null) {
        throw new Error("Missing the required parameter 'family' when calling v1ApBrandBrandFamilyFamilyModelGet");
      }

      let pathParams = {
        'brand': brand,
        'family': family
      };
      let queryParams = {
        'model_name': opts['modelName'],
        'page_size': opts['pageSize'],
        'start_key': opts['startKey'],
        'status': opts['status']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProvisioningDocsDocsModelOutput;
      return this.apiClient.callApi(
        '/v1/ap/brand/{brand}/family/{family}/model', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1ApBrandBrandFamilyFamilyModelModelGet operation.
     * @callback module:api/ProvisioningApi~v1ApBrandBrandFamilyFamilyModelModelGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProvisioningDocsDocsModelOutputSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Model
     * Retrieve a model's details by the randomly generated ID.
     * @param {String} brand brand
     * @param {String} family family
     * @param {String} model model
     * @param {module:api/ProvisioningApi~v1ApBrandBrandFamilyFamilyModelModelGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProvisioningDocsDocsModelOutputSingle}
     */
    v1ApBrandBrandFamilyFamilyModelModelGet(brand, family, model, callback) {
      let postBody = null;
      // verify the required parameter 'brand' is set
      if (brand === undefined || brand === null) {
        throw new Error("Missing the required parameter 'brand' when calling v1ApBrandBrandFamilyFamilyModelModelGet");
      }
      // verify the required parameter 'family' is set
      if (family === undefined || family === null) {
        throw new Error("Missing the required parameter 'family' when calling v1ApBrandBrandFamilyFamilyModelModelGet");
      }
      // verify the required parameter 'model' is set
      if (model === undefined || model === null) {
        throw new Error("Missing the required parameter 'model' when calling v1ApBrandBrandFamilyFamilyModelModelGet");
      }

      let pathParams = {
        'brand': brand,
        'family': family,
        'model': model
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProvisioningDocsDocsModelOutputSingle;
      return this.apiClient.callApi(
        '/v1/ap/brand/{brand}/family/{family}/model/{model}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1ApBrandBrandFamilyFamilyModelModelTemplateGet operation.
     * @callback module:api/ProvisioningApi~v1ApBrandBrandFamilyFamilyModelModelTemplateGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProvisioningDocsDocsTemplatesOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Template List
     * Retrieve a list of all templates for a model within a brand (e.g., Yealink and Polycom).
     * @param {String} brand brand
     * @param {String} family family
     * @param {String} model model
     * @param {Object} opts Optional parameters
     * @param {String} [firmware] 
     * @param {Number} [pageSize] 
     * @param {String} [startKey] 
     * @param {module:model/String} [status] 
     * @param {String} [templateName] 
     * @param {module:api/ProvisioningApi~v1ApBrandBrandFamilyFamilyModelModelTemplateGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProvisioningDocsDocsTemplatesOutput}
     */
    v1ApBrandBrandFamilyFamilyModelModelTemplateGet(brand, family, model, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'brand' is set
      if (brand === undefined || brand === null) {
        throw new Error("Missing the required parameter 'brand' when calling v1ApBrandBrandFamilyFamilyModelModelTemplateGet");
      }
      // verify the required parameter 'family' is set
      if (family === undefined || family === null) {
        throw new Error("Missing the required parameter 'family' when calling v1ApBrandBrandFamilyFamilyModelModelTemplateGet");
      }
      // verify the required parameter 'model' is set
      if (model === undefined || model === null) {
        throw new Error("Missing the required parameter 'model' when calling v1ApBrandBrandFamilyFamilyModelModelTemplateGet");
      }

      let pathParams = {
        'brand': brand,
        'family': family,
        'model': model
      };
      let queryParams = {
        'firmware': opts['firmware'],
        'page_size': opts['pageSize'],
        'start_key': opts['startKey'],
        'status': opts['status'],
        'template_name': opts['templateName']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProvisioningDocsDocsTemplatesOutput;
      return this.apiClient.callApi(
        '/v1/ap/brand/{brand}/family/{family}/model/{model}/template', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1ApBrandBrandFamilyFamilyModelModelTemplateTemplateGet operation.
     * @callback module:api/ProvisioningApi~v1ApBrandBrandFamilyFamilyModelModelTemplateTemplateGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProvisioningDocsDocsTemplateOutputSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Template
     * Retrieve details about a template for a model by the randomly generated ID.
     * @param {String} brand brand
     * @param {String} family family
     * @param {String} model model
     * @param {String} template template
     * @param {module:api/ProvisioningApi~v1ApBrandBrandFamilyFamilyModelModelTemplateTemplateGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProvisioningDocsDocsTemplateOutputSingle}
     */
    v1ApBrandBrandFamilyFamilyModelModelTemplateTemplateGet(brand, family, model, template, callback) {
      let postBody = null;
      // verify the required parameter 'brand' is set
      if (brand === undefined || brand === null) {
        throw new Error("Missing the required parameter 'brand' when calling v1ApBrandBrandFamilyFamilyModelModelTemplateTemplateGet");
      }
      // verify the required parameter 'family' is set
      if (family === undefined || family === null) {
        throw new Error("Missing the required parameter 'family' when calling v1ApBrandBrandFamilyFamilyModelModelTemplateTemplateGet");
      }
      // verify the required parameter 'model' is set
      if (model === undefined || model === null) {
        throw new Error("Missing the required parameter 'model' when calling v1ApBrandBrandFamilyFamilyModelModelTemplateTemplateGet");
      }
      // verify the required parameter 'template' is set
      if (template === undefined || template === null) {
        throw new Error("Missing the required parameter 'template' when calling v1ApBrandBrandFamilyFamilyModelModelTemplateTemplateGet");
      }

      let pathParams = {
        'brand': brand,
        'family': family,
        'model': model,
        'template': template
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProvisioningDocsDocsTemplateOutputSingle;
      return this.apiClient.callApi(
        '/v1/ap/brand/{brand}/family/{family}/model/{model}/template/{template}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1ApBrandBrandFamilyGet operation.
     * @callback module:api/ProvisioningApi~v1ApBrandBrandFamilyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProvisioningDocsDocsFamilyOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Family List
     * Retrieve a list of all families for a brand (e.g., Yealink and Polycom).
     * @param {String} brand brand
     * @param {Object} opts Optional parameters
     * @param {String} [familyName] 
     * @param {Number} [pageSize] 
     * @param {String} [startKey] 
     * @param {module:model/String} [status] 
     * @param {module:api/ProvisioningApi~v1ApBrandBrandFamilyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProvisioningDocsDocsFamilyOutput}
     */
    v1ApBrandBrandFamilyGet(brand, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'brand' is set
      if (brand === undefined || brand === null) {
        throw new Error("Missing the required parameter 'brand' when calling v1ApBrandBrandFamilyGet");
      }

      let pathParams = {
        'brand': brand
      };
      let queryParams = {
        'family_name': opts['familyName'],
        'page_size': opts['pageSize'],
        'start_key': opts['startKey'],
        'status': opts['status']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProvisioningDocsDocsFamilyOutput;
      return this.apiClient.callApi(
        '/v1/ap/brand/{brand}/family', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1ApBrandBrandGet operation.
     * @callback module:api/ProvisioningApi~v1ApBrandBrandGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProvisioningDocsDocsBrandOutputSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Brand
     * Retrieve a brand's details by the randomly generated ID.
     * @param {String} brand brand id to retrieve a brand
     * @param {module:api/ProvisioningApi~v1ApBrandBrandGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProvisioningDocsDocsBrandOutputSingle}
     */
    v1ApBrandBrandGet(brand, callback) {
      let postBody = null;
      // verify the required parameter 'brand' is set
      if (brand === undefined || brand === null) {
        throw new Error("Missing the required parameter 'brand' when calling v1ApBrandBrandGet");
      }

      let pathParams = {
        'brand': brand
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProvisioningDocsDocsBrandOutputSingle;
      return this.apiClient.callApi(
        '/v1/ap/brand/{brand}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1ApBrandGet operation.
     * @callback module:api/ProvisioningApi~v1ApBrandGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProvisioningDocsDocsBrandsOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Brand
     * Retrieve a list of all brands (e.g., Yealink and Polycom) by client.
     * @param {Object} opts Optional parameters
     * @param {String} [brandName] 
     * @param {Number} [pageSize] 
     * @param {String} [startKey] 
     * @param {module:model/String} [status] 
     * @param {module:api/ProvisioningApi~v1ApBrandGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProvisioningDocsDocsBrandsOutput}
     */
    v1ApBrandGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'brand_name': opts['brandName'],
        'page_size': opts['pageSize'],
        'start_key': opts['startKey'],
        'status': opts['status']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProvisioningDocsDocsBrandsOutput;
      return this.apiClient.callApi(
        '/v1/ap/brand', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1ApConfigfileGeneratePost operation.
     * @callback module:api/ProvisioningApi~v1ApConfigfileGeneratePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProvisioningDocsDocsConfigFileOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate config file
     * Generate a configuration file that includes a list of parameters passed to the specified template_id in the request payload, with populated values returned in the response.
     * @param {module:model/ModelsGenerateConfigFileRequest} params body params to generate config file
     * @param {module:api/ProvisioningApi~v1ApConfigfileGeneratePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProvisioningDocsDocsConfigFileOutput}
     */
    v1ApConfigfileGeneratePost(params, callback) {
      let postBody = params;
      // verify the required parameter 'params' is set
      if (params === undefined || params === null) {
        throw new Error("Missing the required parameter 'params' when calling v1ApConfigfileGeneratePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProvisioningDocsDocsConfigFileOutput;
      return this.apiClient.callApi(
        '/v1/ap/configfile/generate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
