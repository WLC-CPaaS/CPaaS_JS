/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ServiceDocsTemporalRuleSetGetAll from '../model/ServiceDocsTemporalRuleSetGetAll';
import ServiceDocsTemporalRuleSetGetSingle from '../model/ServiceDocsTemporalRuleSetGetSingle';
import ServiceVOIPTemporalRuleSetAddEditData from '../model/ServiceVOIPTemporalRuleSetAddEditData';
import UtilCPAASError from '../model/UtilCPAASError';

/**
* TemporalRuleSet service.
* @module api/TemporalRuleSetApi
* @version 1.1
*/
export default class TemporalRuleSetApi {

    /**
    * Constructs a new TemporalRuleSetApi. 
    * @alias module:api/TemporalRuleSetApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1AccountAccountIDTemporalrulesetGet operation.
     * @callback module:api/TemporalRuleSetApi~v1AccountAccountIDTemporalrulesetGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsTemporalRuleSetGetAll} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Temporal Rule Set List
     * Access the temporal rule set list in an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {Object} opts Optional parameters
     * @param {String} [startKey] start_key for pagination that was returned as next_start_key from your previous call
     * @param {Number} [pageSize] number of records to return, range 1 to 50
     * @param {module:api/TemporalRuleSetApi~v1AccountAccountIDTemporalrulesetGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsTemporalRuleSetGetAll}
     */
    v1AccountAccountIDTemporalrulesetGet(accountID, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDTemporalrulesetGet");
      }

      let pathParams = {
        'accountID': accountID
      };
      let queryParams = {
        'start_key': opts['startKey'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsTemporalRuleSetGetAll;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/temporalruleset', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDTemporalrulesetPost operation.
     * @callback module:api/TemporalRuleSetApi~v1AccountAccountIDTemporalrulesetPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsTemporalRuleSetGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Temporal Rule Set
     * Develop a new temporal rule set for an account.
     * @param {String} accountID Account ID, 32 alphanumeric
     * @param {module:model/ServiceVOIPTemporalRuleSetAddEditData} temporalruleset payload fields
     * @param {module:api/TemporalRuleSetApi~v1AccountAccountIDTemporalrulesetPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsTemporalRuleSetGetSingle}
     */
    v1AccountAccountIDTemporalrulesetPost(accountID, temporalruleset, callback) {
      let postBody = temporalruleset;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDTemporalrulesetPost");
      }
      // verify the required parameter 'temporalruleset' is set
      if (temporalruleset === undefined || temporalruleset === null) {
        throw new Error("Missing the required parameter 'temporalruleset' when calling v1AccountAccountIDTemporalrulesetPost");
      }

      let pathParams = {
        'accountID': accountID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsTemporalRuleSetGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/temporalruleset', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDTemporalrulesetTemporalRuleSetIDDelete operation.
     * @callback module:api/TemporalRuleSetApi~v1AccountAccountIDTemporalrulesetTemporalRuleSetIDDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsTemporalRuleSetGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Temporal Rule Set
     * Delete the temporal rule set from an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} temporalRuleSetID temporal rule set ID, 32 alpha numeric
     * @param {module:api/TemporalRuleSetApi~v1AccountAccountIDTemporalrulesetTemporalRuleSetIDDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsTemporalRuleSetGetSingle}
     */
    v1AccountAccountIDTemporalrulesetTemporalRuleSetIDDelete(accountID, temporalRuleSetID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDTemporalrulesetTemporalRuleSetIDDelete");
      }
      // verify the required parameter 'temporalRuleSetID' is set
      if (temporalRuleSetID === undefined || temporalRuleSetID === null) {
        throw new Error("Missing the required parameter 'temporalRuleSetID' when calling v1AccountAccountIDTemporalrulesetTemporalRuleSetIDDelete");
      }

      let pathParams = {
        'accountID': accountID,
        'temporalRuleSetID': temporalRuleSetID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsTemporalRuleSetGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/temporalruleset/{temporalRuleSetID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDTemporalrulesetTemporalRuleSetIDGet operation.
     * @callback module:api/TemporalRuleSetApi~v1AccountAccountIDTemporalrulesetTemporalRuleSetIDGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsTemporalRuleSetGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Temporal Rule Set Details
     * Acquire details about a temporal rule set in an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} temporalRuleSetID Temporal Ruleset ID, 32 alpha numeric
     * @param {module:api/TemporalRuleSetApi~v1AccountAccountIDTemporalrulesetTemporalRuleSetIDGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsTemporalRuleSetGetSingle}
     */
    v1AccountAccountIDTemporalrulesetTemporalRuleSetIDGet(accountID, temporalRuleSetID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDTemporalrulesetTemporalRuleSetIDGet");
      }
      // verify the required parameter 'temporalRuleSetID' is set
      if (temporalRuleSetID === undefined || temporalRuleSetID === null) {
        throw new Error("Missing the required parameter 'temporalRuleSetID' when calling v1AccountAccountIDTemporalrulesetTemporalRuleSetIDGet");
      }

      let pathParams = {
        'accountID': accountID,
        'temporalRuleSetID': temporalRuleSetID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsTemporalRuleSetGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/temporalruleset/{temporalRuleSetID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDTemporalrulesetTemporalRuleSetIDPut operation.
     * @callback module:api/TemporalRuleSetApi~v1AccountAccountIDTemporalrulesetTemporalRuleSetIDPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsTemporalRuleSetGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Temporal Rule Set
     * Efficiently adjust the temporal rule set in an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} temporalRuleSetID Temporal Ruleset ID, 32 alpha numeric
     * @param {module:model/ServiceVOIPTemporalRuleSetAddEditData} reqBody payload fields
     * @param {module:api/TemporalRuleSetApi~v1AccountAccountIDTemporalrulesetTemporalRuleSetIDPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsTemporalRuleSetGetSingle}
     */
    v1AccountAccountIDTemporalrulesetTemporalRuleSetIDPut(accountID, temporalRuleSetID, reqBody, callback) {
      let postBody = reqBody;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDTemporalrulesetTemporalRuleSetIDPut");
      }
      // verify the required parameter 'temporalRuleSetID' is set
      if (temporalRuleSetID === undefined || temporalRuleSetID === null) {
        throw new Error("Missing the required parameter 'temporalRuleSetID' when calling v1AccountAccountIDTemporalrulesetTemporalRuleSetIDPut");
      }
      // verify the required parameter 'reqBody' is set
      if (reqBody === undefined || reqBody === null) {
        throw new Error("Missing the required parameter 'reqBody' when calling v1AccountAccountIDTemporalrulesetTemporalRuleSetIDPut");
      }

      let pathParams = {
        'accountID': accountID,
        'temporalRuleSetID': temporalRuleSetID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsTemporalRuleSetGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/temporalruleset/{temporalRuleSetID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
