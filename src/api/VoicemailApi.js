/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ServiceDocsVoicemailGetAll from '../model/ServiceDocsVoicemailGetAll';
import ServiceDocsVoicemailGetSingle from '../model/ServiceDocsVoicemailGetSingle';
import ServiceDocsVoicemailMessageGetAll from '../model/ServiceDocsVoicemailMessageGetAll';
import ServiceDocsVoicemailMessageGetSingle from '../model/ServiceDocsVoicemailMessageGetSingle';
import ServiceVOIPVoicemailAddEditData from '../model/ServiceVOIPVoicemailAddEditData';
import ServiceVOIPVoicemailMessageAddData from '../model/ServiceVOIPVoicemailMessageAddData';
import ServiceVOIPVoicemailMessageChange from '../model/ServiceVOIPVoicemailMessageChange';
import UtilCPAASError from '../model/UtilCPAASError';

/**
* Voicemail service.
* @module api/VoicemailApi
* @version 1.1
*/
export default class VoicemailApi {

    /**
    * Constructs a new VoicemailApi. 
    * @alias module:api/VoicemailApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1AccountAccountIDVoicemailGet operation.
     * @callback module:api/VoicemailApi~v1AccountAccountIDVoicemailGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsVoicemailGetAll} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Voicemail Box List
     * List all voicemail boxes in an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {Object} opts Optional parameters
     * @param {String} [startKey] start_key for pagination that was returned as next_start_key from your previous call
     * @param {Number} [pageSize] number of records to return, range 1 to 50
     * @param {module:api/VoicemailApi~v1AccountAccountIDVoicemailGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsVoicemailGetAll}
     */
    v1AccountAccountIDVoicemailGet(accountID, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDVoicemailGet");
      }

      let pathParams = {
        'accountID': accountID
      };
      let queryParams = {
        'start_key': opts['startKey'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsVoicemailGetAll;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/voicemail', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDVoicemailPost operation.
     * @callback module:api/VoicemailApi~v1AccountAccountIDVoicemailPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsVoicemailGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Voicemail Box
     * Create a voicemail box for receiving and storing voicemail messages.
     * @param {String} accountID account ID, 32 alphanumeric
     * @param {module:model/ServiceVOIPVoicemailAddEditData} voicemail voicemail payload fields
     * @param {module:api/VoicemailApi~v1AccountAccountIDVoicemailPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsVoicemailGetSingle}
     */
    v1AccountAccountIDVoicemailPost(accountID, voicemail, callback) {
      let postBody = voicemail;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDVoicemailPost");
      }
      // verify the required parameter 'voicemail' is set
      if (voicemail === undefined || voicemail === null) {
        throw new Error("Missing the required parameter 'voicemail' when calling v1AccountAccountIDVoicemailPost");
      }

      let pathParams = {
        'accountID': accountID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsVoicemailGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/voicemail', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDVoicemailVoicemailIDDelete operation.
     * @callback module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsVoicemailGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Voicemail Box
     * Delete a voicemail box in an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} voicemailID Voicemail ID, 32 alpha numeric
     * @param {module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsVoicemailGetSingle}
     */
    v1AccountAccountIDVoicemailVoicemailIDDelete(accountID, voicemailID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDVoicemailVoicemailIDDelete");
      }
      // verify the required parameter 'voicemailID' is set
      if (voicemailID === undefined || voicemailID === null) {
        throw new Error("Missing the required parameter 'voicemailID' when calling v1AccountAccountIDVoicemailVoicemailIDDelete");
      }

      let pathParams = {
        'accountID': accountID,
        'voicemailID': voicemailID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsVoicemailGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/voicemail/{voicemailID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDVoicemailVoicemailIDGet operation.
     * @callback module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsVoicemailGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Voicemail Box Details
     * Get information about a single voicemail box.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} voicemailID Voicemail ID, 32 alpha numeric
     * @param {module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsVoicemailGetSingle}
     */
    v1AccountAccountIDVoicemailVoicemailIDGet(accountID, voicemailID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDVoicemailVoicemailIDGet");
      }
      // verify the required parameter 'voicemailID' is set
      if (voicemailID === undefined || voicemailID === null) {
        throw new Error("Missing the required parameter 'voicemailID' when calling v1AccountAccountIDVoicemailVoicemailIDGet");
      }

      let pathParams = {
        'accountID': accountID,
        'voicemailID': voicemailID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsVoicemailGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/voicemail/{voicemailID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDVoicemailVoicemailIDMessageGet operation.
     * @callback module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessageGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsVoicemailMessageGetAll} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Voicemail Message List
     * Get a list of voicemail messages from an account's voicemail box.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} voicemailID voicemail ID, 32 alpha numeric
     * @param {Object} opts Optional parameters
     * @param {String} [startKey] start_key for pagination that was returned as next_start_key from your previous call
     * @param {Number} [pageSize] number of records to return, range 1 to 50
     * @param {module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessageGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsVoicemailMessageGetAll}
     */
    v1AccountAccountIDVoicemailVoicemailIDMessageGet(accountID, voicemailID, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageGet");
      }
      // verify the required parameter 'voicemailID' is set
      if (voicemailID === undefined || voicemailID === null) {
        throw new Error("Missing the required parameter 'voicemailID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageGet");
      }

      let pathParams = {
        'accountID': accountID,
        'voicemailID': voicemailID
      };
      let queryParams = {
        'start_key': opts['startKey'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsVoicemailMessageGetAll;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/voicemail/{voicemailID}/message', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete operation.
     * @callback module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsVoicemailMessageGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Voicemail Message
     * Delete a voicemail message from a voicemail box in an account.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} voicemailID Voicemail ID, 32 alpha numeric
     * @param {String} messageID message ID, 32 alpha numeric
     * @param {module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsVoicemailMessageGetSingle}
     */
    v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete(accountID, voicemailID, messageID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete");
      }
      // verify the required parameter 'voicemailID' is set
      if (voicemailID === undefined || voicemailID === null) {
        throw new Error("Missing the required parameter 'voicemailID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete");
      }
      // verify the required parameter 'messageID' is set
      if (messageID === undefined || messageID === null) {
        throw new Error("Missing the required parameter 'messageID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDDelete");
      }

      let pathParams = {
        'accountID': accountID,
        'voicemailID': voicemailID,
        'messageID': messageID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsVoicemailMessageGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet operation.
     * @callback module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsVoicemailMessageGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Voicemail Message Details
     * Retrieve the container details of an individual voicemail message. This includes a reference to the audio file, but not the message itself.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} voicemailID Voicemail ID, 32 alpha numeric
     * @param {String} messageID Message ID, 39 (yyyymm-<32 id>)
     * @param {module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsVoicemailMessageGetSingle}
     */
    v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet(accountID, voicemailID, messageID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet");
      }
      // verify the required parameter 'voicemailID' is set
      if (voicemailID === undefined || voicemailID === null) {
        throw new Error("Missing the required parameter 'voicemailID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet");
      }
      // verify the required parameter 'messageID' is set
      if (messageID === undefined || messageID === null) {
        throw new Error("Missing the required parameter 'messageID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDGet");
      }

      let pathParams = {
        'accountID': accountID,
        'voicemailID': voicemailID,
        'messageID': messageID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServiceDocsVoicemailMessageGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut operation.
     * @callback module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsVoicemailMessageGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Voicemail Message
     * Copy or move a voicemail message to a different folder in the same voicemail box or move the message to a separate voicemail box.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} voicemailID Voicemail ID, 32 alpha numeric
     * @param {String} messageID Message ID, 39 (yyyymm-<32 id>)
     * @param {module:model/ServiceVOIPVoicemailMessageChange} reqBody payload fields
     * @param {module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsVoicemailMessageGetSingle}
     */
    v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut(accountID, voicemailID, messageID, reqBody, callback) {
      let postBody = reqBody;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut");
      }
      // verify the required parameter 'voicemailID' is set
      if (voicemailID === undefined || voicemailID === null) {
        throw new Error("Missing the required parameter 'voicemailID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut");
      }
      // verify the required parameter 'messageID' is set
      if (messageID === undefined || messageID === null) {
        throw new Error("Missing the required parameter 'messageID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut");
      }
      // verify the required parameter 'reqBody' is set
      if (reqBody === undefined || reqBody === null) {
        throw new Error("Missing the required parameter 'reqBody' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDPut");
      }

      let pathParams = {
        'accountID': accountID,
        'voicemailID': voicemailID,
        'messageID': messageID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsVoicemailMessageGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet operation.
     * @callback module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGetCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Voicemail Message File
     * Get the original audio content of a specific voicemail message identified by its unique ID within an account's voicemail box. URL Param \"voicemailID\" is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific voicemail box. URL Param \"messageID\" is a unique 32-character alphanumeric identifier assigned by the system, which refers to a specific message within a voicemail box.
     * @param {String} accountID Account ID, unique 32-character alphanumeric identifier
     * @param {String} voicemailID Voicemail Box ID, unique 32-character alphanumeric identifier
     * @param {String} messageID Message ID, unique 32-character alphanumeric identifier
     * @param {module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet(accountID, voicemailID, messageID, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet");
      }
      // verify the required parameter 'voicemailID' is set
      if (voicemailID === undefined || voicemailID === null) {
        throw new Error("Missing the required parameter 'voicemailID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet");
      }
      // verify the required parameter 'messageID' is set
      if (messageID === undefined || messageID === null) {
        throw new Error("Missing the required parameter 'messageID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawGet");
      }

      let pathParams = {
        'accountID': accountID,
        'voicemailID': voicemailID,
        'messageID': messageID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = [];
      let accepts = ['application/octet-stream'];
      let returnType = File;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}/raw', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost operation.
     * @callback module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPostCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {String: Object}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add Voicemail Message File
     * Associate an audio recording file with the voicemail to fully complete the message.
     * @param {String} accountID Account ID, 32 alphanumeric characters
     * @param {String} voicemailID Voicemail ID, 32 alphanumeric characters
     * @param {String} messageID Message ID, 32 alphanumeric characters
     * @param {File} file Audio file to upload
     * @param {module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {String: Object}>}
     */
    v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost(accountID, voicemailID, messageID, file, callback) {
      let postBody = null;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost");
      }
      // verify the required parameter 'voicemailID' is set
      if (voicemailID === undefined || voicemailID === null) {
        throw new Error("Missing the required parameter 'voicemailID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost");
      }
      // verify the required parameter 'messageID' is set
      if (messageID === undefined || messageID === null) {
        throw new Error("Missing the required parameter 'messageID' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost");
      }
      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling v1AccountAccountIDVoicemailVoicemailIDMessageMessageIDRawPost");
      }

      let pathParams = {
        'accountID': accountID,
        'voicemailID': voicemailID,
        'messageID': messageID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'file': file
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = {'String': Object};
      return this.apiClient.callApi(
        '/v1/account/{accountID}/voicemail/{voicemailID}/message/{messageID}/raw', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDVoicemailVoicemailIDMessagePost operation.
     * @callback module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessagePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsVoicemailMessageGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Voicemail Message
     * Create the container information for a recorded voicemail message in a voicemail box.
     * @param {String} accountID account ID, 32 alphanumeric
     * @param {String} voicemailID voicemail ID, 32 alphanumeric
     * @param {module:model/ServiceVOIPVoicemailMessageAddData} message voicemail message payload fields
     * @param {module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDMessagePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsVoicemailMessageGetSingle}
     */
    v1AccountAccountIDVoicemailVoicemailIDMessagePost(accountID, voicemailID, message, callback) {
      let postBody = message;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDVoicemailVoicemailIDMessagePost");
      }
      // verify the required parameter 'voicemailID' is set
      if (voicemailID === undefined || voicemailID === null) {
        throw new Error("Missing the required parameter 'voicemailID' when calling v1AccountAccountIDVoicemailVoicemailIDMessagePost");
      }
      // verify the required parameter 'message' is set
      if (message === undefined || message === null) {
        throw new Error("Missing the required parameter 'message' when calling v1AccountAccountIDVoicemailVoicemailIDMessagePost");
      }

      let pathParams = {
        'accountID': accountID,
        'voicemailID': voicemailID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsVoicemailMessageGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/voicemail/{voicemailID}/message', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1AccountAccountIDVoicemailVoicemailIDPut operation.
     * @callback module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServiceDocsVoicemailGetSingle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Voicemail Box
     * Update the settings in an individual voicemail box, such as the owner, PIN, etc.
     * @param {String} accountID Account ID, 32 alpha numeric
     * @param {String} voicemailID Voicemail ID, 32 alpha numeric
     * @param {module:model/ServiceVOIPVoicemailAddEditData} reqBody payload fields
     * @param {module:api/VoicemailApi~v1AccountAccountIDVoicemailVoicemailIDPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServiceDocsVoicemailGetSingle}
     */
    v1AccountAccountIDVoicemailVoicemailIDPut(accountID, voicemailID, reqBody, callback) {
      let postBody = reqBody;
      // verify the required parameter 'accountID' is set
      if (accountID === undefined || accountID === null) {
        throw new Error("Missing the required parameter 'accountID' when calling v1AccountAccountIDVoicemailVoicemailIDPut");
      }
      // verify the required parameter 'voicemailID' is set
      if (voicemailID === undefined || voicemailID === null) {
        throw new Error("Missing the required parameter 'voicemailID' when calling v1AccountAccountIDVoicemailVoicemailIDPut");
      }
      // verify the required parameter 'reqBody' is set
      if (reqBody === undefined || reqBody === null) {
        throw new Error("Missing the required parameter 'reqBody' when calling v1AccountAccountIDVoicemailVoicemailIDPut");
      }

      let pathParams = {
        'accountID': accountID,
        'voicemailID': voicemailID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ServiceDocsVoicemailGetSingle;
      return this.apiClient.callApi(
        '/v1/account/{accountID}/voicemail/{voicemailID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
