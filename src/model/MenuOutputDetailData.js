/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MenuOutputDetailMedia from './MenuOutputDetailMedia';

/**
 * The MenuOutputDetailData model module.
 * @module model/MenuOutputDetailData
 * @version 1.1
 */
class MenuOutputDetailData {
    /**
     * Constructs a new <code>MenuOutputDetailData</code>.
     * @alias module:model/MenuOutputDetailData
     */
    constructor() { 
        
        MenuOutputDetailData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MenuOutputDetailData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MenuOutputDetailData} obj Optional instance to populate.
     * @return {module:model/MenuOutputDetailData} The populated <code>MenuOutputDetailData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MenuOutputDetailData();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('media')) {
                obj['media'] = ApiClient.convertToType(data['media'], MenuOutputDetailMedia);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('timeout')) {
                obj['timeout'] = ApiClient.convertToType(data['timeout'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MenuOutputDetailData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MenuOutputDetailData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `media`
        if (data['media']) { // data not null
          MenuOutputDetailMedia.validateJSON(data['media']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * ID of the menu
 * @member {String} id
 */
MenuOutputDetailData.prototype['id'] = undefined;

/**
 * The media (prompt) parameters
 * @member {module:model/MenuOutputDetailMedia} media
 */
MenuOutputDetailData.prototype['media'] = undefined;

/**
 * A friendly name for the menu
 * @member {String} name
 */
MenuOutputDetailData.prototype['name'] = undefined;

/**
 * The amount of time (in milliseconds) to wait for the caller to begin entering digits
 * @member {Number} timeout
 */
MenuOutputDetailData.prototype['timeout'] = undefined;






export default MenuOutputDetailData;

