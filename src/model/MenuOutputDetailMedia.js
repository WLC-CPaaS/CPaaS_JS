/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MenuOutputDetailMedia model module.
 * @module model/MenuOutputDetailMedia
 * @version 1.1
 */
class MenuOutputDetailMedia {
    /**
     * Constructs a new <code>MenuOutputDetailMedia</code>.
     * @alias module:model/MenuOutputDetailMedia
     */
    constructor() { 
        
        MenuOutputDetailMedia.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MenuOutputDetailMedia</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MenuOutputDetailMedia} obj Optional instance to populate.
     * @return {module:model/MenuOutputDetailMedia} The populated <code>MenuOutputDetailMedia</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MenuOutputDetailMedia();

            if (data.hasOwnProperty('greeting')) {
                obj['greeting'] = ApiClient.convertToType(data['greeting'], 'String');
            }
            if (data.hasOwnProperty('invalid_media')) {
                obj['invalid_media'] = ApiClient.convertToType(data['invalid_media'], Object);
            }
            if (data.hasOwnProperty('transfer_media')) {
                obj['transfer_media'] = ApiClient.convertToType(data['transfer_media'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MenuOutputDetailMedia</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MenuOutputDetailMedia</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['greeting'] && !(typeof data['greeting'] === 'string' || data['greeting'] instanceof String)) {
            throw new Error("Expected the field `greeting` to be a primitive type in the JSON string but got " + data['greeting']);
        }

        return true;
    }


}



/**
 * The ID of a media object that should be used as the menu greeting
 * @member {String} greeting
 */
MenuOutputDetailMedia.prototype['greeting'] = undefined;

/**
 * When the collected digits don't result in a match or hunt this media can be played
 * @member {Object} invalid_media
 */
MenuOutputDetailMedia.prototype['invalid_media'] = undefined;

/**
 * When a call is transferred from the menu, either after all retries exhausted or a successful hunt, this media can be played
 * @member {Object} transfer_media
 */
MenuOutputDetailMedia.prototype['transfer_media'] = undefined;






export default MenuOutputDetailMedia;

