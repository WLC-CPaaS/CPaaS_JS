/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelEventDetail model module.
 * @module model/ModelEventDetail
 * @version 1.1
 */
class ModelEventDetail {
    /**
     * Constructs a new <code>ModelEventDetail</code>.
     * @alias module:model/ModelEventDetail
     */
    constructor() { 
        
        ModelEventDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelEventDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelEventDetail} obj Optional instance to populate.
     * @return {module:model/ModelEventDetail} The populated <code>ModelEventDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelEventDetail();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('component')) {
                obj['component'] = ApiClient.convertToType(data['component'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('event_name')) {
                obj['event_name'] = ApiClient.convertToType(data['event_name'], 'String');
            }
            if (data.hasOwnProperty('exec_status')) {
                obj['exec_status'] = ApiClient.convertToType(data['exec_status'], 'String');
            }
            if (data.hasOwnProperty('log_date')) {
                obj['log_date'] = ApiClient.convertToType(data['log_date'], 'String');
            }
            if (data.hasOwnProperty('log_time')) {
                obj['log_time'] = ApiClient.convertToType(data['log_time'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelEventDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelEventDetail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        // ensure the json data is a string
        if (data['component'] && !(typeof data['component'] === 'string' || data['component'] instanceof String)) {
            throw new Error("Expected the field `component` to be a primitive type in the JSON string but got " + data['component']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['event_name'] && !(typeof data['event_name'] === 'string' || data['event_name'] instanceof String)) {
            throw new Error("Expected the field `event_name` to be a primitive type in the JSON string but got " + data['event_name']);
        }
        // ensure the json data is a string
        if (data['exec_status'] && !(typeof data['exec_status'] === 'string' || data['exec_status'] instanceof String)) {
            throw new Error("Expected the field `exec_status` to be a primitive type in the JSON string but got " + data['exec_status']);
        }
        // ensure the json data is a string
        if (data['log_date'] && !(typeof data['log_date'] === 'string' || data['log_date'] instanceof String)) {
            throw new Error("Expected the field `log_date` to be a primitive type in the JSON string but got " + data['log_date']);
        }
        // ensure the json data is a string
        if (data['log_time'] && !(typeof data['log_time'] === 'string' || data['log_time'] instanceof String)) {
            throw new Error("Expected the field `log_time` to be a primitive type in the JSON string but got " + data['log_time']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * @member {String} account_id
 */
ModelEventDetail.prototype['account_id'] = undefined;

/**
 * @member {String} component
 */
ModelEventDetail.prototype['component'] = undefined;

/**
 * @member {String} created_at
 */
ModelEventDetail.prototype['created_at'] = undefined;

/**
 * @member {String} event_name
 */
ModelEventDetail.prototype['event_name'] = undefined;

/**
 * @member {String} exec_status
 */
ModelEventDetail.prototype['exec_status'] = undefined;

/**
 * @member {String} log_date
 */
ModelEventDetail.prototype['log_date'] = undefined;

/**
 * @member {String} log_time
 */
ModelEventDetail.prototype['log_time'] = undefined;

/**
 * @member {String} username
 */
ModelEventDetail.prototype['username'] = undefined;






export default ModelEventDetail;

