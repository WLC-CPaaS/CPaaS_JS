/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelsTemplate model module.
 * @module model/ModelsTemplate
 * @version 1.1
 */
class ModelsTemplate {
    /**
     * Constructs a new <code>ModelsTemplate</code>.
     * @alias module:model/ModelsTemplate
     */
    constructor() { 
        
        ModelsTemplate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelsTemplate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelsTemplate} obj Optional instance to populate.
     * @return {module:model/ModelsTemplate} The populated <code>ModelsTemplate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelsTemplate();

            if (data.hasOwnProperty('brand_name')) {
                obj['brand_name'] = ApiClient.convertToType(data['brand_name'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('family_name')) {
                obj['family_name'] = ApiClient.convertToType(data['family_name'], 'String');
            }
            if (data.hasOwnProperty('firmware_id')) {
                obj['firmware_id'] = ApiClient.convertToType(data['firmware_id'], 'String');
            }
            if (data.hasOwnProperty('firmware_version')) {
                obj['firmware_version'] = ApiClient.convertToType(data['firmware_version'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('is_active')) {
                obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
            }
            if (data.hasOwnProperty('model_name')) {
                obj['model_name'] = ApiClient.convertToType(data['model_name'], 'String');
            }
            if (data.hasOwnProperty('template_name')) {
                obj['template_name'] = ApiClient.convertToType(data['template_name'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelsTemplate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelsTemplate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['brand_name'] && !(typeof data['brand_name'] === 'string' || data['brand_name'] instanceof String)) {
            throw new Error("Expected the field `brand_name` to be a primitive type in the JSON string but got " + data['brand_name']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['family_name'] && !(typeof data['family_name'] === 'string' || data['family_name'] instanceof String)) {
            throw new Error("Expected the field `family_name` to be a primitive type in the JSON string but got " + data['family_name']);
        }
        // ensure the json data is a string
        if (data['firmware_id'] && !(typeof data['firmware_id'] === 'string' || data['firmware_id'] instanceof String)) {
            throw new Error("Expected the field `firmware_id` to be a primitive type in the JSON string but got " + data['firmware_id']);
        }
        // ensure the json data is a string
        if (data['firmware_version'] && !(typeof data['firmware_version'] === 'string' || data['firmware_version'] instanceof String)) {
            throw new Error("Expected the field `firmware_version` to be a primitive type in the JSON string but got " + data['firmware_version']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['model_name'] && !(typeof data['model_name'] === 'string' || data['model_name'] instanceof String)) {
            throw new Error("Expected the field `model_name` to be a primitive type in the JSON string but got " + data['model_name']);
        }
        // ensure the json data is a string
        if (data['template_name'] && !(typeof data['template_name'] === 'string' || data['template_name'] instanceof String)) {
            throw new Error("Expected the field `template_name` to be a primitive type in the JSON string but got " + data['template_name']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}



/**
 * @member {String} brand_name
 */
ModelsTemplate.prototype['brand_name'] = undefined;

/**
 * @member {String} created_at
 */
ModelsTemplate.prototype['created_at'] = undefined;

/**
 * @member {String} family_name
 */
ModelsTemplate.prototype['family_name'] = undefined;

/**
 * @member {String} firmware_id
 */
ModelsTemplate.prototype['firmware_id'] = undefined;

/**
 * @member {String} firmware_version
 */
ModelsTemplate.prototype['firmware_version'] = undefined;

/**
 * @member {String} id
 */
ModelsTemplate.prototype['id'] = undefined;

/**
 * @member {Boolean} is_active
 */
ModelsTemplate.prototype['is_active'] = undefined;

/**
 * @member {String} model_name
 */
ModelsTemplate.prototype['model_name'] = undefined;

/**
 * @member {String} template_name
 */
ModelsTemplate.prototype['template_name'] = undefined;

/**
 * @member {String} updated_at
 */
ModelsTemplate.prototype['updated_at'] = undefined;






export default ModelsTemplate;

