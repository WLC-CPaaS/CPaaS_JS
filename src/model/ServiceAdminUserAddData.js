/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;

/**
 * ServiceAdminUserAddData
 */
@.annotation.Generated(value = "org.openapitools.codegen.languages.JavascriptClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceAdminUserAddData {
  @.annotation.Nonnull
  private String email;

  /**
   * Gets or Sets role
   */
  public enum RoleEnum {
    admin(String.valueOf("admin")),
    
    dev(String.valueOf("dev"));

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RoleEnum fromValue(String value) {
      for (RoleEnum b : RoleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  @.annotation.Nonnull
  private RoleEnum role;

  public ServiceAdminUserAddData() {
  }

  public ServiceAdminUserAddData email(@.annotation.Nonnull String email) {
    
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @.annotation.Nonnull

  public String getEmail() {
    return email;
  }


  public void setEmail(@.annotation.Nonnull String email) {
    this.email = email;
  }

  public ServiceAdminUserAddData role(@.annotation.Nonnull RoleEnum role) {
    
    this.role = role;
    return this;
  }

  /**
   * Get role
   * @return role
   */
  @.annotation.Nonnull

  public RoleEnum getRole() {
    return role;
  }


  public void setRole(@.annotation.Nonnull RoleEnum role) {
    this.role = role;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceAdminUserAddData serviceAdminUserAddData = (ServiceAdminUserAddData) o;
    return Objects.equals(this.email, serviceAdminUserAddData.email) &&
        Objects.equals(this.role, serviceAdminUserAddData.role);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, role);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceAdminUserAddData {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

