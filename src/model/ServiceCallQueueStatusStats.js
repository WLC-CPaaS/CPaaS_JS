/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;

/**
 * ServiceCallQueueStatusStats
 */
@.annotation.Generated(value = "org.openapitools.codegen.languages.JavascriptClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceCallQueueStatusStats {
  @.annotation.Nullable
  private Number abandonedSessions;

  @.annotation.Nullable
  private Number activeSessionCount;

  @.annotation.Nullable
  private Number averageWait;

  @.annotation.Nullable
  private Number estimatedWait;

  @.annotation.Nullable
  private Number longestWait;

  @.annotation.Nullable
  private Number missedSessions;

  @.annotation.Nullable
  private Number recipientCount;

  @.annotation.Nullable
  private Number totalSessions;

  public ServiceCallQueueStatusStats() {
  }

  public ServiceCallQueueStatusStats abandonedSessions(@.annotation.Nullable Number abandonedSessions) {
    
    this.abandonedSessions = abandonedSessions;
    return this;
  }

  /**
   * Get abandonedSessions
   * @return abandonedSessions
   */
  @.annotation.Nullable

  public Number getAbandonedSessions() {
    return abandonedSessions;
  }


  public void setAbandonedSessions(@.annotation.Nullable Number abandonedSessions) {
    this.abandonedSessions = abandonedSessions;
  }

  public ServiceCallQueueStatusStats activeSessionCount(@.annotation.Nullable Number activeSessionCount) {
    
    this.activeSessionCount = activeSessionCount;
    return this;
  }

  /**
   * Get activeSessionCount
   * @return activeSessionCount
   */
  @.annotation.Nullable

  public Number getActiveSessionCount() {
    return activeSessionCount;
  }


  public void setActiveSessionCount(@.annotation.Nullable Number activeSessionCount) {
    this.activeSessionCount = activeSessionCount;
  }

  public ServiceCallQueueStatusStats averageWait(@.annotation.Nullable Number averageWait) {
    
    this.averageWait = averageWait;
    return this;
  }

  /**
   * Get averageWait
   * @return averageWait
   */
  @.annotation.Nullable

  public Number getAverageWait() {
    return averageWait;
  }


  public void setAverageWait(@.annotation.Nullable Number averageWait) {
    this.averageWait = averageWait;
  }

  public ServiceCallQueueStatusStats estimatedWait(@.annotation.Nullable Number estimatedWait) {
    
    this.estimatedWait = estimatedWait;
    return this;
  }

  /**
   * Get estimatedWait
   * @return estimatedWait
   */
  @.annotation.Nullable

  public Number getEstimatedWait() {
    return estimatedWait;
  }


  public void setEstimatedWait(@.annotation.Nullable Number estimatedWait) {
    this.estimatedWait = estimatedWait;
  }

  public ServiceCallQueueStatusStats longestWait(@.annotation.Nullable Number longestWait) {
    
    this.longestWait = longestWait;
    return this;
  }

  /**
   * Get longestWait
   * @return longestWait
   */
  @.annotation.Nullable

  public Number getLongestWait() {
    return longestWait;
  }


  public void setLongestWait(@.annotation.Nullable Number longestWait) {
    this.longestWait = longestWait;
  }

  public ServiceCallQueueStatusStats missedSessions(@.annotation.Nullable Number missedSessions) {
    
    this.missedSessions = missedSessions;
    return this;
  }

  /**
   * Get missedSessions
   * @return missedSessions
   */
  @.annotation.Nullable

  public Number getMissedSessions() {
    return missedSessions;
  }


  public void setMissedSessions(@.annotation.Nullable Number missedSessions) {
    this.missedSessions = missedSessions;
  }

  public ServiceCallQueueStatusStats recipientCount(@.annotation.Nullable Number recipientCount) {
    
    this.recipientCount = recipientCount;
    return this;
  }

  /**
   * Get recipientCount
   * @return recipientCount
   */
  @.annotation.Nullable

  public Number getRecipientCount() {
    return recipientCount;
  }


  public void setRecipientCount(@.annotation.Nullable Number recipientCount) {
    this.recipientCount = recipientCount;
  }

  public ServiceCallQueueStatusStats totalSessions(@.annotation.Nullable Number totalSessions) {
    
    this.totalSessions = totalSessions;
    return this;
  }

  /**
   * Get totalSessions
   * @return totalSessions
   */
  @.annotation.Nullable

  public Number getTotalSessions() {
    return totalSessions;
  }


  public void setTotalSessions(@.annotation.Nullable Number totalSessions) {
    this.totalSessions = totalSessions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceCallQueueStatusStats serviceCallQueueStatusStats = (ServiceCallQueueStatusStats) o;
    return Objects.equals(this.abandonedSessions, serviceCallQueueStatusStats.abandonedSessions) &&
        Objects.equals(this.activeSessionCount, serviceCallQueueStatusStats.activeSessionCount) &&
        Objects.equals(this.averageWait, serviceCallQueueStatusStats.averageWait) &&
        Objects.equals(this.estimatedWait, serviceCallQueueStatusStats.estimatedWait) &&
        Objects.equals(this.longestWait, serviceCallQueueStatusStats.longestWait) &&
        Objects.equals(this.missedSessions, serviceCallQueueStatusStats.missedSessions) &&
        Objects.equals(this.recipientCount, serviceCallQueueStatusStats.recipientCount) &&
        Objects.equals(this.totalSessions, serviceCallQueueStatusStats.totalSessions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abandonedSessions, activeSessionCount, averageWait, estimatedWait, longestWait, missedSessions, recipientCount, totalSessions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceCallQueueStatusStats {\n");
    sb.append("    abandonedSessions: ").append(toIndentedString(abandonedSessions)).append("\n");
    sb.append("    activeSessionCount: ").append(toIndentedString(activeSessionCount)).append("\n");
    sb.append("    averageWait: ").append(toIndentedString(averageWait)).append("\n");
    sb.append("    estimatedWait: ").append(toIndentedString(estimatedWait)).append("\n");
    sb.append("    longestWait: ").append(toIndentedString(longestWait)).append("\n");
    sb.append("    missedSessions: ").append(toIndentedString(missedSessions)).append("\n");
    sb.append("    recipientCount: ").append(toIndentedString(recipientCount)).append("\n");
    sb.append("    totalSessions: ").append(toIndentedString(totalSessions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

