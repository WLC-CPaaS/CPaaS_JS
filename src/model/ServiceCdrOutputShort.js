/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceCdrOutputShort model module.
 * @module model/ServiceCdrOutputShort
 * @version 1.1
 */
class ServiceCdrOutputShort {
    /**
     * Constructs a new <code>ServiceCdrOutputShort</code>.
     * @alias module:model/ServiceCdrOutputShort
     */
    constructor() { 
        
        ServiceCdrOutputShort.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceCdrOutputShort</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceCdrOutputShort} obj Optional instance to populate.
     * @return {module:model/ServiceCdrOutputShort} The populated <code>ServiceCdrOutputShort</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceCdrOutputShort();

            if (data.hasOwnProperty('authorizing_id')) {
                obj['authorizing_id'] = ApiClient.convertToType(data['authorizing_id'], 'String');
            }
            if (data.hasOwnProperty('billing_seconds')) {
                obj['billing_seconds'] = ApiClient.convertToType(data['billing_seconds'], 'Number');
            }
            if (data.hasOwnProperty('bridge_id')) {
                obj['bridge_id'] = ApiClient.convertToType(data['bridge_id'], 'String');
            }
            if (data.hasOwnProperty('call_id')) {
                obj['call_id'] = ApiClient.convertToType(data['call_id'], 'String');
            }
            if (data.hasOwnProperty('call_priority')) {
                obj['call_priority'] = ApiClient.convertToType(data['call_priority'], 'String');
            }
            if (data.hasOwnProperty('call_type')) {
                obj['call_type'] = ApiClient.convertToType(data['call_type'], 'String');
            }
            if (data.hasOwnProperty('callee_id_name')) {
                obj['callee_id_name'] = ApiClient.convertToType(data['callee_id_name'], 'String');
            }
            if (data.hasOwnProperty('callee_id_number')) {
                obj['callee_id_number'] = ApiClient.convertToType(data['callee_id_number'], 'String');
            }
            if (data.hasOwnProperty('caller_id_name')) {
                obj['caller_id_name'] = ApiClient.convertToType(data['caller_id_name'], 'String');
            }
            if (data.hasOwnProperty('caller_id_number')) {
                obj['caller_id_number'] = ApiClient.convertToType(data['caller_id_number'], 'String');
            }
            if (data.hasOwnProperty('calling_from')) {
                obj['calling_from'] = ApiClient.convertToType(data['calling_from'], 'String');
            }
            if (data.hasOwnProperty('cost')) {
                obj['cost'] = ApiClient.convertToType(data['cost'], 'String');
            }
            if (data.hasOwnProperty('dialed_number')) {
                obj['dialed_number'] = ApiClient.convertToType(data['dialed_number'], 'String');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('duration_seconds')) {
                obj['duration_seconds'] = ApiClient.convertToType(data['duration_seconds'], 'Number');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('hangup_cause')) {
                obj['hangup_cause'] = ApiClient.convertToType(data['hangup_cause'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('interaction_id')) {
                obj['interaction_id'] = ApiClient.convertToType(data['interaction_id'], 'String');
            }
            if (data.hasOwnProperty('media_recordings')) {
                obj['media_recordings'] = ApiClient.convertToType(data['media_recordings'], [Object]);
            }
            if (data.hasOwnProperty('media_server')) {
                obj['media_server'] = ApiClient.convertToType(data['media_server'], 'String');
            }
            if (data.hasOwnProperty('other_leg_call_id')) {
                obj['other_leg_call_id'] = ApiClient.convertToType(data['other_leg_call_id'], 'String');
            }
            if (data.hasOwnProperty('owner_id')) {
                obj['owner_id'] = ApiClient.convertToType(data['owner_id'], 'String');
            }
            if (data.hasOwnProperty('rate')) {
                obj['rate'] = ApiClient.convertToType(data['rate'], 'String');
            }
            if (data.hasOwnProperty('rate_name')) {
                obj['rate_name'] = ApiClient.convertToType(data['rate_name'], 'String');
            }
            if (data.hasOwnProperty('recording_url')) {
                obj['recording_url'] = ApiClient.convertToType(data['recording_url'], 'String');
            }
            if (data.hasOwnProperty('request')) {
                obj['request'] = ApiClient.convertToType(data['request'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
            if (data.hasOwnProperty('timestamp_datetime')) {
                obj['timestamp_datetime'] = ApiClient.convertToType(data['timestamp_datetime'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceCdrOutputShort</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceCdrOutputShort</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['authorizing_id'] && !(typeof data['authorizing_id'] === 'string' || data['authorizing_id'] instanceof String)) {
            throw new Error("Expected the field `authorizing_id` to be a primitive type in the JSON string but got " + data['authorizing_id']);
        }
        // ensure the json data is a string
        if (data['bridge_id'] && !(typeof data['bridge_id'] === 'string' || data['bridge_id'] instanceof String)) {
            throw new Error("Expected the field `bridge_id` to be a primitive type in the JSON string but got " + data['bridge_id']);
        }
        // ensure the json data is a string
        if (data['call_id'] && !(typeof data['call_id'] === 'string' || data['call_id'] instanceof String)) {
            throw new Error("Expected the field `call_id` to be a primitive type in the JSON string but got " + data['call_id']);
        }
        // ensure the json data is a string
        if (data['call_priority'] && !(typeof data['call_priority'] === 'string' || data['call_priority'] instanceof String)) {
            throw new Error("Expected the field `call_priority` to be a primitive type in the JSON string but got " + data['call_priority']);
        }
        // ensure the json data is a string
        if (data['call_type'] && !(typeof data['call_type'] === 'string' || data['call_type'] instanceof String)) {
            throw new Error("Expected the field `call_type` to be a primitive type in the JSON string but got " + data['call_type']);
        }
        // ensure the json data is a string
        if (data['callee_id_name'] && !(typeof data['callee_id_name'] === 'string' || data['callee_id_name'] instanceof String)) {
            throw new Error("Expected the field `callee_id_name` to be a primitive type in the JSON string but got " + data['callee_id_name']);
        }
        // ensure the json data is a string
        if (data['callee_id_number'] && !(typeof data['callee_id_number'] === 'string' || data['callee_id_number'] instanceof String)) {
            throw new Error("Expected the field `callee_id_number` to be a primitive type in the JSON string but got " + data['callee_id_number']);
        }
        // ensure the json data is a string
        if (data['caller_id_name'] && !(typeof data['caller_id_name'] === 'string' || data['caller_id_name'] instanceof String)) {
            throw new Error("Expected the field `caller_id_name` to be a primitive type in the JSON string but got " + data['caller_id_name']);
        }
        // ensure the json data is a string
        if (data['caller_id_number'] && !(typeof data['caller_id_number'] === 'string' || data['caller_id_number'] instanceof String)) {
            throw new Error("Expected the field `caller_id_number` to be a primitive type in the JSON string but got " + data['caller_id_number']);
        }
        // ensure the json data is a string
        if (data['calling_from'] && !(typeof data['calling_from'] === 'string' || data['calling_from'] instanceof String)) {
            throw new Error("Expected the field `calling_from` to be a primitive type in the JSON string but got " + data['calling_from']);
        }
        // ensure the json data is a string
        if (data['cost'] && !(typeof data['cost'] === 'string' || data['cost'] instanceof String)) {
            throw new Error("Expected the field `cost` to be a primitive type in the JSON string but got " + data['cost']);
        }
        // ensure the json data is a string
        if (data['dialed_number'] && !(typeof data['dialed_number'] === 'string' || data['dialed_number'] instanceof String)) {
            throw new Error("Expected the field `dialed_number` to be a primitive type in the JSON string but got " + data['dialed_number']);
        }
        // ensure the json data is a string
        if (data['direction'] && !(typeof data['direction'] === 'string' || data['direction'] instanceof String)) {
            throw new Error("Expected the field `direction` to be a primitive type in the JSON string but got " + data['direction']);
        }
        // ensure the json data is a string
        if (data['from'] && !(typeof data['from'] === 'string' || data['from'] instanceof String)) {
            throw new Error("Expected the field `from` to be a primitive type in the JSON string but got " + data['from']);
        }
        // ensure the json data is a string
        if (data['hangup_cause'] && !(typeof data['hangup_cause'] === 'string' || data['hangup_cause'] instanceof String)) {
            throw new Error("Expected the field `hangup_cause` to be a primitive type in the JSON string but got " + data['hangup_cause']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['interaction_id'] && !(typeof data['interaction_id'] === 'string' || data['interaction_id'] instanceof String)) {
            throw new Error("Expected the field `interaction_id` to be a primitive type in the JSON string but got " + data['interaction_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['media_recordings'])) {
            throw new Error("Expected the field `media_recordings` to be an array in the JSON data but got " + data['media_recordings']);
        }
        // ensure the json data is a string
        if (data['media_server'] && !(typeof data['media_server'] === 'string' || data['media_server'] instanceof String)) {
            throw new Error("Expected the field `media_server` to be a primitive type in the JSON string but got " + data['media_server']);
        }
        // ensure the json data is a string
        if (data['other_leg_call_id'] && !(typeof data['other_leg_call_id'] === 'string' || data['other_leg_call_id'] instanceof String)) {
            throw new Error("Expected the field `other_leg_call_id` to be a primitive type in the JSON string but got " + data['other_leg_call_id']);
        }
        // ensure the json data is a string
        if (data['owner_id'] && !(typeof data['owner_id'] === 'string' || data['owner_id'] instanceof String)) {
            throw new Error("Expected the field `owner_id` to be a primitive type in the JSON string but got " + data['owner_id']);
        }
        // ensure the json data is a string
        if (data['rate'] && !(typeof data['rate'] === 'string' || data['rate'] instanceof String)) {
            throw new Error("Expected the field `rate` to be a primitive type in the JSON string but got " + data['rate']);
        }
        // ensure the json data is a string
        if (data['rate_name'] && !(typeof data['rate_name'] === 'string' || data['rate_name'] instanceof String)) {
            throw new Error("Expected the field `rate_name` to be a primitive type in the JSON string but got " + data['rate_name']);
        }
        // ensure the json data is a string
        if (data['recording_url'] && !(typeof data['recording_url'] === 'string' || data['recording_url'] instanceof String)) {
            throw new Error("Expected the field `recording_url` to be a primitive type in the JSON string but got " + data['recording_url']);
        }
        // ensure the json data is a string
        if (data['request'] && !(typeof data['request'] === 'string' || data['request'] instanceof String)) {
            throw new Error("Expected the field `request` to be a primitive type in the JSON string but got " + data['request']);
        }
        // ensure the json data is a string
        if (data['timestamp_datetime'] && !(typeof data['timestamp_datetime'] === 'string' || data['timestamp_datetime'] instanceof String)) {
            throw new Error("Expected the field `timestamp_datetime` to be a primitive type in the JSON string but got " + data['timestamp_datetime']);
        }
        // ensure the json data is a string
        if (data['to'] && !(typeof data['to'] === 'string' || data['to'] instanceof String)) {
            throw new Error("Expected the field `to` to be a primitive type in the JSON string but got " + data['to']);
        }

        return true;
    }


}



/**
 * @member {String} authorizing_id
 */
ServiceCdrOutputShort.prototype['authorizing_id'] = undefined;

/**
 * @member {Number} billing_seconds
 */
ServiceCdrOutputShort.prototype['billing_seconds'] = undefined;

/**
 * @member {String} bridge_id
 */
ServiceCdrOutputShort.prototype['bridge_id'] = undefined;

/**
 * @member {String} call_id
 */
ServiceCdrOutputShort.prototype['call_id'] = undefined;

/**
 * @member {String} call_priority
 */
ServiceCdrOutputShort.prototype['call_priority'] = undefined;

/**
 * @member {String} call_type
 */
ServiceCdrOutputShort.prototype['call_type'] = undefined;

/**
 * @member {String} callee_id_name
 */
ServiceCdrOutputShort.prototype['callee_id_name'] = undefined;

/**
 * @member {String} callee_id_number
 */
ServiceCdrOutputShort.prototype['callee_id_number'] = undefined;

/**
 * @member {String} caller_id_name
 */
ServiceCdrOutputShort.prototype['caller_id_name'] = undefined;

/**
 * @member {String} caller_id_number
 */
ServiceCdrOutputShort.prototype['caller_id_number'] = undefined;

/**
 * @member {String} calling_from
 */
ServiceCdrOutputShort.prototype['calling_from'] = undefined;

/**
 * @member {String} cost
 */
ServiceCdrOutputShort.prototype['cost'] = undefined;

/**
 * @member {String} dialed_number
 */
ServiceCdrOutputShort.prototype['dialed_number'] = undefined;

/**
 * @member {String} direction
 */
ServiceCdrOutputShort.prototype['direction'] = undefined;

/**
 * @member {Number} duration_seconds
 */
ServiceCdrOutputShort.prototype['duration_seconds'] = undefined;

/**
 * @member {String} from
 */
ServiceCdrOutputShort.prototype['from'] = undefined;

/**
 * @member {String} hangup_cause
 */
ServiceCdrOutputShort.prototype['hangup_cause'] = undefined;

/**
 * @member {String} id
 */
ServiceCdrOutputShort.prototype['id'] = undefined;

/**
 * @member {String} interaction_id
 */
ServiceCdrOutputShort.prototype['interaction_id'] = undefined;

/**
 * @member {Array.<Object>} media_recordings
 */
ServiceCdrOutputShort.prototype['media_recordings'] = undefined;

/**
 * @member {String} media_server
 */
ServiceCdrOutputShort.prototype['media_server'] = undefined;

/**
 * @member {String} other_leg_call_id
 */
ServiceCdrOutputShort.prototype['other_leg_call_id'] = undefined;

/**
 * @member {String} owner_id
 */
ServiceCdrOutputShort.prototype['owner_id'] = undefined;

/**
 * @member {String} rate
 */
ServiceCdrOutputShort.prototype['rate'] = undefined;

/**
 * @member {String} rate_name
 */
ServiceCdrOutputShort.prototype['rate_name'] = undefined;

/**
 * @member {String} recording_url
 */
ServiceCdrOutputShort.prototype['recording_url'] = undefined;

/**
 * @member {String} request
 */
ServiceCdrOutputShort.prototype['request'] = undefined;

/**
 * @member {Number} timestamp
 */
ServiceCdrOutputShort.prototype['timestamp'] = undefined;

/**
 * @member {String} timestamp_datetime
 */
ServiceCdrOutputShort.prototype['timestamp_datetime'] = undefined;

/**
 * @member {String} to
 */
ServiceCdrOutputShort.prototype['to'] = undefined;






export default ServiceCdrOutputShort;

