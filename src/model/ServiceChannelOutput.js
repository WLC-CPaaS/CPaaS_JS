/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceChannelOutput model module.
 * @module model/ServiceChannelOutput
 * @version 1.1
 */
class ServiceChannelOutput {
    /**
     * Constructs a new <code>ServiceChannelOutput</code>.
     * @alias module:model/ServiceChannelOutput
     */
    constructor() { 
        
        ServiceChannelOutput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceChannelOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceChannelOutput} obj Optional instance to populate.
     * @return {module:model/ServiceChannelOutput} The populated <code>ServiceChannelOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceChannelOutput();

            if (data.hasOwnProperty('answered')) {
                obj['answered'] = ApiClient.convertToType(data['answered'], 'Boolean');
            }
            if (data.hasOwnProperty('authorizing_id')) {
                obj['authorizing_id'] = ApiClient.convertToType(data['authorizing_id'], 'String');
            }
            if (data.hasOwnProperty('authorizing_type')) {
                obj['authorizing_type'] = ApiClient.convertToType(data['authorizing_type'], 'String');
            }
            if (data.hasOwnProperty('callflow_id')) {
                obj['callflow_id'] = ApiClient.convertToType(data['callflow_id'], 'String');
            }
            if (data.hasOwnProperty('channel_authorized')) {
                obj['channel_authorized'] = ApiClient.convertToType(data['channel_authorized'], 'Boolean');
            }
            if (data.hasOwnProperty('custom_application_vars')) {
                obj['custom_application_vars'] = ApiClient.convertToType(data['custom_application_vars'], {'String': Object});
            }
            if (data.hasOwnProperty('custom_auth_headers')) {
                obj['custom_auth_headers'] = ApiClient.convertToType(data['custom_auth_headers'], {'String': Object});
            }
            if (data.hasOwnProperty('custom_channel_vars')) {
                obj['custom_channel_vars'] = ApiClient.convertToType(data['custom_channel_vars'], {'String': Object});
            }
            if (data.hasOwnProperty('custom_sip_headers')) {
                obj['custom_sip_headers'] = ApiClient.convertToType(data['custom_sip_headers'], {'String': Object});
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('direction')) {
                obj['direction'] = ApiClient.convertToType(data['direction'], 'String');
            }
            if (data.hasOwnProperty('elapsed_s')) {
                obj['elapsed_s'] = ApiClient.convertToType(data['elapsed_s'], 'Number');
            }
            if (data.hasOwnProperty('from_tag')) {
                obj['from_tag'] = ApiClient.convertToType(data['from_tag'], 'String');
            }
            if (data.hasOwnProperty('interaction_id')) {
                obj['interaction_id'] = ApiClient.convertToType(data['interaction_id'], 'String');
            }
            if (data.hasOwnProperty('is_loopback')) {
                obj['is_loopback'] = ApiClient.convertToType(data['is_loopback'], 'Boolean');
            }
            if (data.hasOwnProperty('is_onhold')) {
                obj['is_onhold'] = ApiClient.convertToType(data['is_onhold'], 'Boolean');
            }
            if (data.hasOwnProperty('other_leg')) {
                obj['other_leg'] = ApiClient.convertToType(data['other_leg'], 'String');
            }
            if (data.hasOwnProperty('owner_id')) {
                obj['owner_id'] = ApiClient.convertToType(data['owner_id'], 'String');
            }
            if (data.hasOwnProperty('presence_id')) {
                obj['presence_id'] = ApiClient.convertToType(data['presence_id'], 'String');
            }
            if (data.hasOwnProperty('request')) {
                obj['request'] = ApiClient.convertToType(data['request'], 'String');
            }
            if (data.hasOwnProperty('reseller_id')) {
                obj['reseller_id'] = ApiClient.convertToType(data['reseller_id'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
            if (data.hasOwnProperty('to_tag')) {
                obj['to_tag'] = ApiClient.convertToType(data['to_tag'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceChannelOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceChannelOutput</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['authorizing_id'] && !(typeof data['authorizing_id'] === 'string' || data['authorizing_id'] instanceof String)) {
            throw new Error("Expected the field `authorizing_id` to be a primitive type in the JSON string but got " + data['authorizing_id']);
        }
        // ensure the json data is a string
        if (data['authorizing_type'] && !(typeof data['authorizing_type'] === 'string' || data['authorizing_type'] instanceof String)) {
            throw new Error("Expected the field `authorizing_type` to be a primitive type in the JSON string but got " + data['authorizing_type']);
        }
        // ensure the json data is a string
        if (data['callflow_id'] && !(typeof data['callflow_id'] === 'string' || data['callflow_id'] instanceof String)) {
            throw new Error("Expected the field `callflow_id` to be a primitive type in the JSON string but got " + data['callflow_id']);
        }
        // ensure the json data is a string
        if (data['destination'] && !(typeof data['destination'] === 'string' || data['destination'] instanceof String)) {
            throw new Error("Expected the field `destination` to be a primitive type in the JSON string but got " + data['destination']);
        }
        // ensure the json data is a string
        if (data['direction'] && !(typeof data['direction'] === 'string' || data['direction'] instanceof String)) {
            throw new Error("Expected the field `direction` to be a primitive type in the JSON string but got " + data['direction']);
        }
        // ensure the json data is a string
        if (data['from_tag'] && !(typeof data['from_tag'] === 'string' || data['from_tag'] instanceof String)) {
            throw new Error("Expected the field `from_tag` to be a primitive type in the JSON string but got " + data['from_tag']);
        }
        // ensure the json data is a string
        if (data['interaction_id'] && !(typeof data['interaction_id'] === 'string' || data['interaction_id'] instanceof String)) {
            throw new Error("Expected the field `interaction_id` to be a primitive type in the JSON string but got " + data['interaction_id']);
        }
        // ensure the json data is a string
        if (data['other_leg'] && !(typeof data['other_leg'] === 'string' || data['other_leg'] instanceof String)) {
            throw new Error("Expected the field `other_leg` to be a primitive type in the JSON string but got " + data['other_leg']);
        }
        // ensure the json data is a string
        if (data['owner_id'] && !(typeof data['owner_id'] === 'string' || data['owner_id'] instanceof String)) {
            throw new Error("Expected the field `owner_id` to be a primitive type in the JSON string but got " + data['owner_id']);
        }
        // ensure the json data is a string
        if (data['presence_id'] && !(typeof data['presence_id'] === 'string' || data['presence_id'] instanceof String)) {
            throw new Error("Expected the field `presence_id` to be a primitive type in the JSON string but got " + data['presence_id']);
        }
        // ensure the json data is a string
        if (data['request'] && !(typeof data['request'] === 'string' || data['request'] instanceof String)) {
            throw new Error("Expected the field `request` to be a primitive type in the JSON string but got " + data['request']);
        }
        // ensure the json data is a string
        if (data['reseller_id'] && !(typeof data['reseller_id'] === 'string' || data['reseller_id'] instanceof String)) {
            throw new Error("Expected the field `reseller_id` to be a primitive type in the JSON string but got " + data['reseller_id']);
        }
        // ensure the json data is a string
        if (data['to_tag'] && !(typeof data['to_tag'] === 'string' || data['to_tag'] instanceof String)) {
            throw new Error("Expected the field `to_tag` to be a primitive type in the JSON string but got " + data['to_tag']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }
        // ensure the json data is a string
        if (data['uuid'] && !(typeof data['uuid'] === 'string' || data['uuid'] instanceof String)) {
            throw new Error("Expected the field `uuid` to be a primitive type in the JSON string but got " + data['uuid']);
        }

        return true;
    }


}



/**
 * @member {Boolean} answered
 */
ServiceChannelOutput.prototype['answered'] = undefined;

/**
 * @member {String} authorizing_id
 */
ServiceChannelOutput.prototype['authorizing_id'] = undefined;

/**
 * @member {String} authorizing_type
 */
ServiceChannelOutput.prototype['authorizing_type'] = undefined;

/**
 * @member {String} callflow_id
 */
ServiceChannelOutput.prototype['callflow_id'] = undefined;

/**
 * @member {Boolean} channel_authorized
 */
ServiceChannelOutput.prototype['channel_authorized'] = undefined;

/**
 * @member {Object.<String, Object>} custom_application_vars
 */
ServiceChannelOutput.prototype['custom_application_vars'] = undefined;

/**
 * @member {Object.<String, Object>} custom_auth_headers
 */
ServiceChannelOutput.prototype['custom_auth_headers'] = undefined;

/**
 * @member {Object.<String, Object>} custom_channel_vars
 */
ServiceChannelOutput.prototype['custom_channel_vars'] = undefined;

/**
 * @member {Object.<String, Object>} custom_sip_headers
 */
ServiceChannelOutput.prototype['custom_sip_headers'] = undefined;

/**
 * @member {String} destination
 */
ServiceChannelOutput.prototype['destination'] = undefined;

/**
 * @member {String} direction
 */
ServiceChannelOutput.prototype['direction'] = undefined;

/**
 * @member {Number} elapsed_s
 */
ServiceChannelOutput.prototype['elapsed_s'] = undefined;

/**
 * @member {String} from_tag
 */
ServiceChannelOutput.prototype['from_tag'] = undefined;

/**
 * @member {String} interaction_id
 */
ServiceChannelOutput.prototype['interaction_id'] = undefined;

/**
 * @member {Boolean} is_loopback
 */
ServiceChannelOutput.prototype['is_loopback'] = undefined;

/**
 * @member {Boolean} is_onhold
 */
ServiceChannelOutput.prototype['is_onhold'] = undefined;

/**
 * @member {String} other_leg
 */
ServiceChannelOutput.prototype['other_leg'] = undefined;

/**
 * @member {String} owner_id
 */
ServiceChannelOutput.prototype['owner_id'] = undefined;

/**
 * @member {String} presence_id
 */
ServiceChannelOutput.prototype['presence_id'] = undefined;

/**
 * @member {String} request
 */
ServiceChannelOutput.prototype['request'] = undefined;

/**
 * @member {String} reseller_id
 */
ServiceChannelOutput.prototype['reseller_id'] = undefined;

/**
 * @member {Number} timestamp
 */
ServiceChannelOutput.prototype['timestamp'] = undefined;

/**
 * @member {String} to_tag
 */
ServiceChannelOutput.prototype['to_tag'] = undefined;

/**
 * @member {String} username
 */
ServiceChannelOutput.prototype['username'] = undefined;

/**
 * @member {String} uuid
 */
ServiceChannelOutput.prototype['uuid'] = undefined;






export default ServiceChannelOutput;

