/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceE911LocationInput model module.
 * @module model/ServiceE911LocationInput
 * @version 1.1
 */
class ServiceE911LocationInput {
    /**
     * Constructs a new <code>ServiceE911LocationInput</code>.
     * @alias module:model/ServiceE911LocationInput
     * @param address1 {String} 
     * @param community {String} 
     * @param postalCode {String} 
     * @param state {String} 
     */
    constructor(address1, community, postalCode, state) { 
        
        ServiceE911LocationInput.initialize(this, address1, community, postalCode, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address1, community, postalCode, state) { 
        obj['address_1'] = address1;
        obj['community'] = community;
        obj['postal_code'] = postalCode;
        obj['state'] = state;
    }

    /**
     * Constructs a <code>ServiceE911LocationInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceE911LocationInput} obj Optional instance to populate.
     * @return {module:model/ServiceE911LocationInput} The populated <code>ServiceE911LocationInput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceE911LocationInput();

            if (data.hasOwnProperty('address_1')) {
                obj['address_1'] = ApiClient.convertToType(data['address_1'], 'String');
            }
            if (data.hasOwnProperty('address_2')) {
                obj['address_2'] = ApiClient.convertToType(data['address_2'], 'String');
            }
            if (data.hasOwnProperty('community')) {
                obj['community'] = ApiClient.convertToType(data['community'], 'String');
            }
            if (data.hasOwnProperty('plus_four')) {
                obj['plus_four'] = ApiClient.convertToType(data['plus_four'], 'String');
            }
            if (data.hasOwnProperty('postal_code')) {
                obj['postal_code'] = ApiClient.convertToType(data['postal_code'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceE911LocationInput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceE911LocationInput</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ServiceE911LocationInput.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['address_1'] && !(typeof data['address_1'] === 'string' || data['address_1'] instanceof String)) {
            throw new Error("Expected the field `address_1` to be a primitive type in the JSON string but got " + data['address_1']);
        }
        // ensure the json data is a string
        if (data['address_2'] && !(typeof data['address_2'] === 'string' || data['address_2'] instanceof String)) {
            throw new Error("Expected the field `address_2` to be a primitive type in the JSON string but got " + data['address_2']);
        }
        // ensure the json data is a string
        if (data['community'] && !(typeof data['community'] === 'string' || data['community'] instanceof String)) {
            throw new Error("Expected the field `community` to be a primitive type in the JSON string but got " + data['community']);
        }
        // ensure the json data is a string
        if (data['plus_four'] && !(typeof data['plus_four'] === 'string' || data['plus_four'] instanceof String)) {
            throw new Error("Expected the field `plus_four` to be a primitive type in the JSON string but got " + data['plus_four']);
        }
        // ensure the json data is a string
        if (data['postal_code'] && !(typeof data['postal_code'] === 'string' || data['postal_code'] instanceof String)) {
            throw new Error("Expected the field `postal_code` to be a primitive type in the JSON string but got " + data['postal_code']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

ServiceE911LocationInput.RequiredProperties = ["address_1", "community", "postal_code", "state"];

/**
 * @member {String} address_1
 */
ServiceE911LocationInput.prototype['address_1'] = undefined;

/**
 * @member {String} address_2
 */
ServiceE911LocationInput.prototype['address_2'] = undefined;

/**
 * @member {String} community
 */
ServiceE911LocationInput.prototype['community'] = undefined;

/**
 * @member {String} plus_four
 */
ServiceE911LocationInput.prototype['plus_four'] = undefined;

/**
 * @member {String} postal_code
 */
ServiceE911LocationInput.prototype['postal_code'] = undefined;

/**
 * @member {String} state
 */
ServiceE911LocationInput.prototype['state'] = undefined;

/**
 * @member {module:model/ServiceE911LocationInput.TypeEnum} type
 */
ServiceE911LocationInput.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ServiceE911LocationInput['TypeEnum'] = {

    /**
     * value: "ADDRESS"
     * @const
     */
    "ADDRESS": "ADDRESS"
};



export default ServiceE911LocationInput;

