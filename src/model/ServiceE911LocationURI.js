/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceE911LocationURILegacyData from './ServiceE911LocationURILegacyData';
import ServiceE911LocationURIStatus from './ServiceE911LocationURIStatus';

/**
 * The ServiceE911LocationURI model module.
 * @module model/ServiceE911LocationURI
 * @version 1.1
 */
class ServiceE911LocationURI {
    /**
     * Constructs a new <code>ServiceE911LocationURI</code>.
     * @alias module:model/ServiceE911LocationURI
     */
    constructor() { 
        
        ServiceE911LocationURI.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceE911LocationURI</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceE911LocationURI} obj Optional instance to populate.
     * @return {module:model/ServiceE911LocationURI} The populated <code>ServiceE911LocationURI</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceE911LocationURI();

            if (data.hasOwnProperty('activatedTime')) {
                obj['activatedTime'] = ApiClient.convertToType(data['activatedTime'], 'String');
            }
            if (data.hasOwnProperty('address1')) {
                obj['address1'] = ApiClient.convertToType(data['address1'], 'String');
            }
            if (data.hasOwnProperty('address2')) {
                obj['address2'] = ApiClient.convertToType(data['address2'], 'String');
            }
            if (data.hasOwnProperty('callerName')) {
                obj['callerName'] = ApiClient.convertToType(data['callerName'], 'String');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('community')) {
                obj['community'] = ApiClient.convertToType(data['community'], 'String');
            }
            if (data.hasOwnProperty('customerOrderID')) {
                obj['customerOrderID'] = ApiClient.convertToType(data['customerOrderID'], 'String');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('legacyData')) {
                obj['legacyData'] = ServiceE911LocationURILegacyData.constructFromObject(data['legacyData']);
            }
            if (data.hasOwnProperty('locationID')) {
                obj['locationID'] = ApiClient.convertToType(data['locationID'], 'String');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('plusFour')) {
                obj['plusFour'] = ApiClient.convertToType(data['plusFour'], 'String');
            }
            if (data.hasOwnProperty('postalCode')) {
                obj['postalCode'] = ApiClient.convertToType(data['postalCode'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ServiceE911LocationURIStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceE911LocationURI</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceE911LocationURI</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activatedTime'] && !(typeof data['activatedTime'] === 'string' || data['activatedTime'] instanceof String)) {
            throw new Error("Expected the field `activatedTime` to be a primitive type in the JSON string but got " + data['activatedTime']);
        }
        // ensure the json data is a string
        if (data['address1'] && !(typeof data['address1'] === 'string' || data['address1'] instanceof String)) {
            throw new Error("Expected the field `address1` to be a primitive type in the JSON string but got " + data['address1']);
        }
        // ensure the json data is a string
        if (data['address2'] && !(typeof data['address2'] === 'string' || data['address2'] instanceof String)) {
            throw new Error("Expected the field `address2` to be a primitive type in the JSON string but got " + data['address2']);
        }
        // ensure the json data is a string
        if (data['callerName'] && !(typeof data['callerName'] === 'string' || data['callerName'] instanceof String)) {
            throw new Error("Expected the field `callerName` to be a primitive type in the JSON string but got " + data['callerName']);
        }
        // ensure the json data is a string
        if (data['comments'] && !(typeof data['comments'] === 'string' || data['comments'] instanceof String)) {
            throw new Error("Expected the field `comments` to be a primitive type in the JSON string but got " + data['comments']);
        }
        // ensure the json data is a string
        if (data['community'] && !(typeof data['community'] === 'string' || data['community'] instanceof String)) {
            throw new Error("Expected the field `community` to be a primitive type in the JSON string but got " + data['community']);
        }
        // ensure the json data is a string
        if (data['customerOrderID'] && !(typeof data['customerOrderID'] === 'string' || data['customerOrderID'] instanceof String)) {
            throw new Error("Expected the field `customerOrderID` to be a primitive type in the JSON string but got " + data['customerOrderID']);
        }
        // validate the optional field `legacyData`
        if (data['legacyData']) { // data not null
          ServiceE911LocationURILegacyData.validateJSON(data['legacyData']);
        }
        // ensure the json data is a string
        if (data['locationID'] && !(typeof data['locationID'] === 'string' || data['locationID'] instanceof String)) {
            throw new Error("Expected the field `locationID` to be a primitive type in the JSON string but got " + data['locationID']);
        }
        // ensure the json data is a string
        if (data['plusFour'] && !(typeof data['plusFour'] === 'string' || data['plusFour'] instanceof String)) {
            throw new Error("Expected the field `plusFour` to be a primitive type in the JSON string but got " + data['plusFour']);
        }
        // ensure the json data is a string
        if (data['postalCode'] && !(typeof data['postalCode'] === 'string' || data['postalCode'] instanceof String)) {
            throw new Error("Expected the field `postalCode` to be a primitive type in the JSON string but got " + data['postalCode']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          ServiceE911LocationURIStatus.validateJSON(data['status']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {String} activatedTime
 */
ServiceE911LocationURI.prototype['activatedTime'] = undefined;

/**
 * @member {String} address1
 */
ServiceE911LocationURI.prototype['address1'] = undefined;

/**
 * @member {String} address2
 */
ServiceE911LocationURI.prototype['address2'] = undefined;

/**
 * @member {String} callerName
 */
ServiceE911LocationURI.prototype['callerName'] = undefined;

/**
 * @member {String} comments
 */
ServiceE911LocationURI.prototype['comments'] = undefined;

/**
 * @member {String} community
 */
ServiceE911LocationURI.prototype['community'] = undefined;

/**
 * @member {String} customerOrderID
 */
ServiceE911LocationURI.prototype['customerOrderID'] = undefined;

/**
 * @member {Number} latitude
 */
ServiceE911LocationURI.prototype['latitude'] = undefined;

/**
 * @member {module:model/ServiceE911LocationURILegacyData} legacyData
 */
ServiceE911LocationURI.prototype['legacyData'] = undefined;

/**
 * @member {String} locationID
 */
ServiceE911LocationURI.prototype['locationID'] = undefined;

/**
 * @member {Number} longitude
 */
ServiceE911LocationURI.prototype['longitude'] = undefined;

/**
 * @member {String} plusFour
 */
ServiceE911LocationURI.prototype['plusFour'] = undefined;

/**
 * @member {String} postalCode
 */
ServiceE911LocationURI.prototype['postalCode'] = undefined;

/**
 * @member {String} state
 */
ServiceE911LocationURI.prototype['state'] = undefined;

/**
 * @member {module:model/ServiceE911LocationURIStatus} status
 */
ServiceE911LocationURI.prototype['status'] = undefined;

/**
 * @member {String} type
 */
ServiceE911LocationURI.prototype['type'] = undefined;

/**
 * @member {String} updateTime
 */
ServiceE911LocationURI.prototype['updateTime'] = undefined;






export default ServiceE911LocationURI;

