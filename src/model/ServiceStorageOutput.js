/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;
import ServiceStoragePlan;

/**
 * ServiceStorageOutput
 */
@.annotation.Generated(value = "org.openapitools.codegen.languages.JavascriptClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceStorageOutput {
  @.annotation.Nullable
  private {String: Object} attachments;

  @.annotation.Nullable
  private {String: Object} connections;

  @.annotation.Nullable
  private String id;

  @.annotation.Nullable
  private ServiceStoragePlan plan;

  public ServiceStorageOutput() {
  }

  public ServiceStorageOutput attachments(@.annotation.Nullable {String: Object} attachments) {
    
    this.attachments = attachments;
    return this;
  }

  public ServiceStorageOutput putAttachmentsItem(String key, Object attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new HashMap<>();
    }
    this.attachments.put(key, attachmentsItem);
    return this;
  }

  /**
   * Get attachments
   * @return attachments
   */
  @.annotation.Nullable

  public {String: Object} getAttachments() {
    return attachments;
  }


  public void setAttachments(@.annotation.Nullable {String: Object} attachments) {
    this.attachments = attachments;
  }

  public ServiceStorageOutput connections(@.annotation.Nullable {String: Object} connections) {
    
    this.connections = connections;
    return this;
  }

  public ServiceStorageOutput putConnectionsItem(String key, Object connectionsItem) {
    if (this.connections == null) {
      this.connections = new HashMap<>();
    }
    this.connections.put(key, connectionsItem);
    return this;
  }

  /**
   * Get connections
   * @return connections
   */
  @.annotation.Nullable

  public {String: Object} getConnections() {
    return connections;
  }


  public void setConnections(@.annotation.Nullable {String: Object} connections) {
    this.connections = connections;
  }

  public ServiceStorageOutput id(@.annotation.Nullable String id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @.annotation.Nullable

  public String getId() {
    return id;
  }


  public void setId(@.annotation.Nullable String id) {
    this.id = id;
  }

  public ServiceStorageOutput plan(@.annotation.Nullable ServiceStoragePlan plan) {
    
    this.plan = plan;
    return this;
  }

  /**
   * Get plan
   * @return plan
   */
  @.annotation.Nullable

  public ServiceStoragePlan getPlan() {
    return plan;
  }


  public void setPlan(@.annotation.Nullable ServiceStoragePlan plan) {
    this.plan = plan;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceStorageOutput serviceStorageOutput = (ServiceStorageOutput) o;
    return Objects.equals(this.attachments, serviceStorageOutput.attachments) &&
        Objects.equals(this.connections, serviceStorageOutput.connections) &&
        Objects.equals(this.id, serviceStorageOutput.id) &&
        Objects.equals(this.plan, serviceStorageOutput.plan);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachments, connections, id, plan);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceStorageOutput {\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    connections: ").append(toIndentedString(connections)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

