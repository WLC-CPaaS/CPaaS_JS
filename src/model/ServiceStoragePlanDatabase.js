/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceStoragePlanDatabaseAttachment from './ServiceStoragePlanDatabaseAttachment';
import ServiceStoragePlanDatabaseProperties from './ServiceStoragePlanDatabaseProperties';
import ServiceStoragePlanDatabaseTypes from './ServiceStoragePlanDatabaseTypes';

/**
 * The ServiceStoragePlanDatabase model module.
 * @module model/ServiceStoragePlanDatabase
 * @version 1.1
 */
class ServiceStoragePlanDatabase {
    /**
     * Constructs a new <code>ServiceStoragePlanDatabase</code>.
     * @alias module:model/ServiceStoragePlanDatabase
     */
    constructor() { 
        
        ServiceStoragePlanDatabase.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceStoragePlanDatabase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceStoragePlanDatabase} obj Optional instance to populate.
     * @return {module:model/ServiceStoragePlanDatabase} The populated <code>ServiceStoragePlanDatabase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceStoragePlanDatabase();

            if (data.hasOwnProperty('attachments')) {
                obj['attachments'] = ServiceStoragePlanDatabaseAttachment.constructFromObject(data['attachments']);
            }
            if (data.hasOwnProperty('connection')) {
                obj['connection'] = ApiClient.convertToType(data['connection'], 'String');
            }
            if (data.hasOwnProperty('database')) {
                obj['database'] = ServiceStoragePlanDatabaseProperties.constructFromObject(data['database']);
            }
            if (data.hasOwnProperty('types')) {
                obj['types'] = ServiceStoragePlanDatabaseTypes.constructFromObject(data['types']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceStoragePlanDatabase</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceStoragePlanDatabase</code>.
     */
    static validateJSON(data) {
        // validate the optional field `attachments`
        if (data['attachments']) { // data not null
          ServiceStoragePlanDatabaseAttachment.validateJSON(data['attachments']);
        }
        // ensure the json data is a string
        if (data['connection'] && !(typeof data['connection'] === 'string' || data['connection'] instanceof String)) {
            throw new Error("Expected the field `connection` to be a primitive type in the JSON string but got " + data['connection']);
        }
        // validate the optional field `database`
        if (data['database']) { // data not null
          ServiceStoragePlanDatabaseProperties.validateJSON(data['database']);
        }
        // validate the optional field `types`
        if (data['types']) { // data not null
          ServiceStoragePlanDatabaseTypes.validateJSON(data['types']);
        }

        return true;
    }


}



/**
 * @member {module:model/ServiceStoragePlanDatabaseAttachment} attachments
 */
ServiceStoragePlanDatabase.prototype['attachments'] = undefined;

/**
 * @member {String} connection
 */
ServiceStoragePlanDatabase.prototype['connection'] = undefined;

/**
 * @member {module:model/ServiceStoragePlanDatabaseProperties} database
 */
ServiceStoragePlanDatabase.prototype['database'] = undefined;

/**
 * @member {module:model/ServiceStoragePlanDatabaseTypes} types
 */
ServiceStoragePlanDatabase.prototype['types'] = undefined;






export default ServiceStoragePlanDatabase;

