/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceTTS model module.
 * @module model/ServiceTTS
 * @version 1.1
 */
class ServiceTTS {
    /**
     * Constructs a new <code>ServiceTTS</code>.
     * @alias module:model/ServiceTTS
     * @param text {String} 
     */
    constructor(text) { 
        
        ServiceTTS.initialize(this, text);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, text) { 
        obj['text'] = text;
    }

    /**
     * Constructs a <code>ServiceTTS</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceTTS} obj Optional instance to populate.
     * @return {module:model/ServiceTTS} The populated <code>ServiceTTS</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceTTS();

            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('voice')) {
                obj['voice'] = ApiClient.convertToType(data['voice'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceTTS</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceTTS</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ServiceTTS.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['voice'] && !(typeof data['voice'] === 'string' || data['voice'] instanceof String)) {
            throw new Error("Expected the field `voice` to be a primitive type in the JSON string but got " + data['voice']);
        }

        return true;
    }


}

ServiceTTS.RequiredProperties = ["text"];

/**
 * @member {String} text
 */
ServiceTTS.prototype['text'] = undefined;

/**
 * @member {module:model/ServiceTTS.VoiceEnum} voice
 */
ServiceTTS.prototype['voice'] = undefined;





/**
 * Allowed values for the <code>voice</code> property.
 * @enum {String}
 * @readonly
 */
ServiceTTS['VoiceEnum'] = {

    /**
     * value: "female/en-US"
     * @const
     */
    "female/en-US": "female/en-US",

    /**
     * value: "male/en-US"
     * @const
     */
    "male/en-US": "male/en-US",

    /**
     * value: "female/en-CA"
     * @const
     */
    "female/en-CA": "female/en-CA",

    /**
     * value: "female/en-AU"
     * @const
     */
    "female/en-AU": "female/en-AU",

    /**
     * value: "female/en-GB"
     * @const
     */
    "female/en-GB": "female/en-GB",

    /**
     * value: "male/en-GB"
     * @const
     */
    "male/en-GB": "male/en-GB",

    /**
     * value: "female/es-US"
     * @const
     */
    "female/es-US": "female/es-US",

    /**
     * value: "male/es-US"
     * @const
     */
    "male/es-US": "male/es-US",

    /**
     * value: "female/us-US"
     * @const
     */
    "female/us-US": "female/us-US",

    /**
     * value: "female/zh-CN"
     * @const
     */
    "female/zh-CN": "female/zh-CN",

    /**
     * value: "male/zh-CN"
     * @const
     */
    "male/zh-CN": "male/zh-CN",

    /**
     * value: "female/zh-HK"
     * @const
     */
    "female/zh-HK": "female/zh-HK",

    /**
     * value: "female/zh-TW"
     * @const
     */
    "female/zh-TW": "female/zh-TW",

    /**
     * value: "female/ja-JP"
     * @const
     */
    "female/ja-JP": "female/ja-JP",

    /**
     * value: "male/ja-JP"
     * @const
     */
    "male/ja-JP": "male/ja-JP",

    /**
     * value: "female/ko-KR"
     * @const
     */
    "female/ko-KR": "female/ko-KR",

    /**
     * value: "male/ko-KR"
     * @const
     */
    "male/ko-KR": "male/ko-KR",

    /**
     * value: "female/da-DK"
     * @const
     */
    "female/da-DK": "female/da-DK",

    /**
     * value: "female/de-DE"
     * @const
     */
    "female/de-DE": "female/de-DE",

    /**
     * value: "male/de-DE"
     * @const
     */
    "male/de-DE": "male/de-DE",

    /**
     * value: "female/ca-ES"
     * @const
     */
    "female/ca-ES": "female/ca-ES",

    /**
     * value: "female/es-ES"
     * @const
     */
    "female/es-ES": "female/es-ES",

    /**
     * value: "male/es-ES"
     * @const
     */
    "male/es-ES": "male/es-ES",

    /**
     * value: "female/fi-FI"
     * @const
     */
    "female/fi-FI": "female/fi-FI",

    /**
     * value: "female/fr-CA"
     * @const
     */
    "female/fr-CA": "female/fr-CA",

    /**
     * value: "male/fr-CA"
     * @const
     */
    "male/fr-CA": "male/fr-CA",

    /**
     * value: "female/fr-FR"
     * @const
     */
    "female/fr-FR": "female/fr-FR",

    /**
     * value: "male/fr-FR"
     * @const
     */
    "male/fr-FR": "male/fr-FR",

    /**
     * value: "female/it-IT"
     * @const
     */
    "female/it-IT": "female/it-IT",

    /**
     * value: "male/it-IT"
     * @const
     */
    "male/it-IT": "male/it-IT",

    /**
     * value: "female/nb-NO"
     * @const
     */
    "female/nb-NO": "female/nb-NO",

    /**
     * value: "female/nl-NL"
     * @const
     */
    "female/nl-NL": "female/nl-NL",

    /**
     * value: "female/pl-PL"
     * @const
     */
    "female/pl-PL": "female/pl-PL",

    /**
     * value: "female/pt-BR"
     * @const
     */
    "female/pt-BR": "female/pt-BR",

    /**
     * value: "female/pt-PT"
     * @const
     */
    "female/pt-PT": "female/pt-PT",

    /**
     * value: "male/pt-PT"
     * @const
     */
    "male/pt-PT": "male/pt-PT",

    /**
     * value: "female/ru-RU"
     * @const
     */
    "female/ru-RU": "female/ru-RU",

    /**
     * value: "male/ru-RU"
     * @const
     */
    "male/ru-RU": "male/ru-RU",

    /**
     * value: "female/sv-SE"
     * @const
     */
    "female/sv-SE": "female/sv-SE",

    /**
     * value: "female/hu-HU"
     * @const
     */
    "female/hu-HU": "female/hu-HU",

    /**
     * value: "female/cs-CZ"
     * @const
     */
    "female/cs-CZ": "female/cs-CZ",

    /**
     * value: "female/tr-TR"
     * @const
     */
    "female/tr-TR": "female/tr-TR",

    /**
     * value: "male/tr-TR"
     * @const
     */
    "male/tr-TR": "male/tr-TR",

    /**
     * value: "male/ru-RU/Vladimir"
     * @const
     */
    "male/ru-RU/Vladimir": "male/ru-RU/Vladimir",

    /**
     * value: "female/ru-RU/Julia"
     * @const
     */
    "female/ru-RU/Julia": "female/ru-RU/Julia",

    /**
     * value: "female/ru-RU/Anna"
     * @const
     */
    "female/ru-RU/Anna": "female/ru-RU/Anna",

    /**
     * value: "female/ru-RU/Viktoria"
     * @const
     */
    "female/ru-RU/Viktoria": "female/ru-RU/Viktoria",

    /**
     * value: "male/ru-RU/Alexander"
     * @const
     */
    "male/ru-RU/Alexander": "male/ru-RU/Alexander",

    /**
     * value: "female/ru-RU/Maria"
     * @const
     */
    "female/ru-RU/Maria": "female/ru-RU/Maria",

    /**
     * value: "female/ru-RU/Lidia"
     * @const
     */
    "female/ru-RU/Lidia": "female/ru-RU/Lidia",

    /**
     * value: "es-ES-Standard-A"
     * @const
     */
    "es-ES-Standard-A": "es-ES-Standard-A",

    /**
     * value: "it-IT-Standard-A"
     * @const
     */
    "it-IT-Standard-A": "it-IT-Standard-A",

    /**
     * value: "ja-JP-Standard-A"
     * @const
     */
    "ja-JP-Standard-A": "ja-JP-Standard-A",

    /**
     * value: "ko-KR-Standard-A"
     * @const
     */
    "ko-KR-Standard-A": "ko-KR-Standard-A",

    /**
     * value: "pt-BR-Standard-A"
     * @const
     */
    "pt-BR-Standard-A": "pt-BR-Standard-A",

    /**
     * value: "tr-TR-Standard-A"
     * @const
     */
    "tr-TR-Standard-A": "tr-TR-Standard-A",

    /**
     * value: "sv-SE-Standard-A"
     * @const
     */
    "sv-SE-Standard-A": "sv-SE-Standard-A",

    /**
     * value: "nl-NL-Standard-A"
     * @const
     */
    "nl-NL-Standard-A": "nl-NL-Standard-A",

    /**
     * value: "en-US-Wavenet-D"
     * @const
     */
    "en-US-Wavenet-D": "en-US-Wavenet-D",

    /**
     * value: "de-DE-Wavenet-A"
     * @const
     */
    "de-DE-Wavenet-A": "de-DE-Wavenet-A",

    /**
     * value: "de-DE-Wavenet-B"
     * @const
     */
    "de-DE-Wavenet-B": "de-DE-Wavenet-B",

    /**
     * value: "de-DE-Wavenet-C"
     * @const
     */
    "de-DE-Wavenet-C": "de-DE-Wavenet-C",

    /**
     * value: "de-DE-Wavenet-D"
     * @const
     */
    "de-DE-Wavenet-D": "de-DE-Wavenet-D",

    /**
     * value: "en-AU-Wavenet-A"
     * @const
     */
    "en-AU-Wavenet-A": "en-AU-Wavenet-A",

    /**
     * value: "en-AU-Wavenet-B"
     * @const
     */
    "en-AU-Wavenet-B": "en-AU-Wavenet-B",

    /**
     * value: "en-AU-Wavenet-C"
     * @const
     */
    "en-AU-Wavenet-C": "en-AU-Wavenet-C",

    /**
     * value: "en-AU-Wavenet-D"
     * @const
     */
    "en-AU-Wavenet-D": "en-AU-Wavenet-D",

    /**
     * value: "en-GB-Wavenet-A"
     * @const
     */
    "en-GB-Wavenet-A": "en-GB-Wavenet-A",

    /**
     * value: "en-GB-Wavenet-B"
     * @const
     */
    "en-GB-Wavenet-B": "en-GB-Wavenet-B",

    /**
     * value: "en-GB-Wavenet-C"
     * @const
     */
    "en-GB-Wavenet-C": "en-GB-Wavenet-C",

    /**
     * value: "en-GB-Wavenet-D"
     * @const
     */
    "en-GB-Wavenet-D": "en-GB-Wavenet-D",

    /**
     * value: "en-US-Wavenet-A"
     * @const
     */
    "en-US-Wavenet-A": "en-US-Wavenet-A",

    /**
     * value: "en-US-Wavenet-B"
     * @const
     */
    "en-US-Wavenet-B": "en-US-Wavenet-B",

    /**
     * value: "en-US-Wavenet-C"
     * @const
     */
    "en-US-Wavenet-C": "en-US-Wavenet-C",

    /**
     * value: "en-US-Wavenet-E"
     * @const
     */
    "en-US-Wavenet-E": "en-US-Wavenet-E",

    /**
     * value: "en-US-Wavenet-F"
     * @const
     */
    "en-US-Wavenet-F": "en-US-Wavenet-F",

    /**
     * value: "fr-FR-Wavenet-A"
     * @const
     */
    "fr-FR-Wavenet-A": "fr-FR-Wavenet-A",

    /**
     * value: "fr-FR-Wavenet-B"
     * @const
     */
    "fr-FR-Wavenet-B": "fr-FR-Wavenet-B",

    /**
     * value: "fr-FR-Wavenet-C"
     * @const
     */
    "fr-FR-Wavenet-C": "fr-FR-Wavenet-C",

    /**
     * value: "fr-FR-Wavenet-D"
     * @const
     */
    "fr-FR-Wavenet-D": "fr-FR-Wavenet-D",

    /**
     * value: "it-IT-Wavenet-A"
     * @const
     */
    "it-IT-Wavenet-A": "it-IT-Wavenet-A",

    /**
     * value: "ja-JP-Wavenet-A"
     * @const
     */
    "ja-JP-Wavenet-A": "ja-JP-Wavenet-A",

    /**
     * value: "nl-NL-Wavenet-A"
     * @const
     */
    "nl-NL-Wavenet-A": "nl-NL-Wavenet-A",

    /**
     * value: "en-GB-Standard-A"
     * @const
     */
    "en-GB-Standard-A": "en-GB-Standard-A",

    /**
     * value: "en-GB-Standard-B"
     * @const
     */
    "en-GB-Standard-B": "en-GB-Standard-B",

    /**
     * value: "en-GB-Standard-C"
     * @const
     */
    "en-GB-Standard-C": "en-GB-Standard-C",

    /**
     * value: "en-GB-Standard-D"
     * @const
     */
    "en-GB-Standard-D": "en-GB-Standard-D",

    /**
     * value: "en-US-Standard-B"
     * @const
     */
    "en-US-Standard-B": "en-US-Standard-B",

    /**
     * value: "en-US-Standard-C"
     * @const
     */
    "en-US-Standard-C": "en-US-Standard-C",

    /**
     * value: "en-US-Standard-D"
     * @const
     */
    "en-US-Standard-D": "en-US-Standard-D",

    /**
     * value: "en-US-Standard-E"
     * @const
     */
    "en-US-Standard-E": "en-US-Standard-E",

    /**
     * value: "de-DE-Standard-A"
     * @const
     */
    "de-DE-Standard-A": "de-DE-Standard-A",

    /**
     * value: "de-DE-Standard-B"
     * @const
     */
    "de-DE-Standard-B": "de-DE-Standard-B",

    /**
     * value: "en-AU-Standard-A"
     * @const
     */
    "en-AU-Standard-A": "en-AU-Standard-A",

    /**
     * value: "en-AU-Standard-B"
     * @const
     */
    "en-AU-Standard-B": "en-AU-Standard-B",

    /**
     * value: "en-AU-Standard-C"
     * @const
     */
    "en-AU-Standard-C": "en-AU-Standard-C",

    /**
     * value: "en-AU-Standard-D"
     * @const
     */
    "en-AU-Standard-D": "en-AU-Standard-D",

    /**
     * value: "fr-CA-Standard-A"
     * @const
     */
    "fr-CA-Standard-A": "fr-CA-Standard-A",

    /**
     * value: "fr-CA-Standard-B"
     * @const
     */
    "fr-CA-Standard-B": "fr-CA-Standard-B",

    /**
     * value: "fr-CA-Standard-C"
     * @const
     */
    "fr-CA-Standard-C": "fr-CA-Standard-C",

    /**
     * value: "fr-CA-Standard-D"
     * @const
     */
    "fr-CA-Standard-D": "fr-CA-Standard-D",

    /**
     * value: "fr-FR-Standard-A"
     * @const
     */
    "fr-FR-Standard-A": "fr-FR-Standard-A",

    /**
     * value: "fr-FR-Standard-B"
     * @const
     */
    "fr-FR-Standard-B": "fr-FR-Standard-B",

    /**
     * value: "fr-FR-Standard-C"
     * @const
     */
    "fr-FR-Standard-C": "fr-FR-Standard-C",

    /**
     * value: "fr-FR-Standard-D"
     * @const
     */
    "fr-FR-Standard-D": "fr-FR-Standard-D"
};



export default ServiceTTS;

