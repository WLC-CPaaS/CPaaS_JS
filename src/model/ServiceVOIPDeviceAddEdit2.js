/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceCallForward from './ServiceCallForward';
import ServiceCallRecordingSettings from './ServiceCallRecordingSettings';
import ServiceMusicOnHold from './ServiceMusicOnHold';
import ServiceVOIPDeviceAddEdit3a from './ServiceVOIPDeviceAddEdit3a';
import ServiceVOIPDeviceAddEdit3c from './ServiceVOIPDeviceAddEdit3c';
import ServiceVOIPSharedDoNotDisturb from './ServiceVOIPSharedDoNotDisturb';

/**
 * The ServiceVOIPDeviceAddEdit2 model module.
 * @module model/ServiceVOIPDeviceAddEdit2
 * @version 1.1
 */
class ServiceVOIPDeviceAddEdit2 {
    /**
     * Constructs a new <code>ServiceVOIPDeviceAddEdit2</code>.
     * @alias module:model/ServiceVOIPDeviceAddEdit2
     * @param name {String} 
     * @param sip {module:model/ServiceVOIPDeviceAddEdit3a} 
     */
    constructor(name, sip) { 
        
        ServiceVOIPDeviceAddEdit2.initialize(this, name, sip);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, sip) { 
        obj['name'] = name;
        obj['sip'] = sip;
    }

    /**
     * Constructs a <code>ServiceVOIPDeviceAddEdit2</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceVOIPDeviceAddEdit2} obj Optional instance to populate.
     * @return {module:model/ServiceVOIPDeviceAddEdit2} The populated <code>ServiceVOIPDeviceAddEdit2</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceVOIPDeviceAddEdit2();

            if (data.hasOwnProperty('call_forward')) {
                obj['call_forward'] = ServiceCallForward.constructFromObject(data['call_forward']);
            }
            if (data.hasOwnProperty('call_recording')) {
                obj['call_recording'] = ServiceCallRecordingSettings.constructFromObject(data['call_recording']);
            }
            if (data.hasOwnProperty('caller_id')) {
                obj['caller_id'] = ServiceVOIPDeviceAddEdit3c.constructFromObject(data['caller_id']);
            }
            if (data.hasOwnProperty('device_type')) {
                obj['device_type'] = ApiClient.convertToType(data['device_type'], 'String');
            }
            if (data.hasOwnProperty('do_not_disturb')) {
                obj['do_not_disturb'] = ServiceVOIPSharedDoNotDisturb.constructFromObject(data['do_not_disturb']);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('mac_address')) {
                obj['mac_address'] = ApiClient.convertToType(data['mac_address'], 'String');
            }
            if (data.hasOwnProperty('music_on_hold')) {
                obj['music_on_hold'] = ServiceMusicOnHold.constructFromObject(data['music_on_hold']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('owner_id')) {
                obj['owner_id'] = ApiClient.convertToType(data['owner_id'], 'String');
            }
            if (data.hasOwnProperty('sip')) {
                obj['sip'] = ServiceVOIPDeviceAddEdit3a.constructFromObject(data['sip']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceVOIPDeviceAddEdit2</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceVOIPDeviceAddEdit2</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ServiceVOIPDeviceAddEdit2.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `call_forward`
        if (data['call_forward']) { // data not null
          ServiceCallForward.validateJSON(data['call_forward']);
        }
        // validate the optional field `call_recording`
        if (data['call_recording']) { // data not null
          ServiceCallRecordingSettings.validateJSON(data['call_recording']);
        }
        // validate the optional field `caller_id`
        if (data['caller_id']) { // data not null
          ServiceVOIPDeviceAddEdit3c.validateJSON(data['caller_id']);
        }
        // ensure the json data is a string
        if (data['device_type'] && !(typeof data['device_type'] === 'string' || data['device_type'] instanceof String)) {
            throw new Error("Expected the field `device_type` to be a primitive type in the JSON string but got " + data['device_type']);
        }
        // validate the optional field `do_not_disturb`
        if (data['do_not_disturb']) { // data not null
          ServiceVOIPSharedDoNotDisturb.validateJSON(data['do_not_disturb']);
        }
        // ensure the json data is a string
        if (data['mac_address'] && !(typeof data['mac_address'] === 'string' || data['mac_address'] instanceof String)) {
            throw new Error("Expected the field `mac_address` to be a primitive type in the JSON string but got " + data['mac_address']);
        }
        // validate the optional field `music_on_hold`
        if (data['music_on_hold']) { // data not null
          ServiceMusicOnHold.validateJSON(data['music_on_hold']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['owner_id'] && !(typeof data['owner_id'] === 'string' || data['owner_id'] instanceof String)) {
            throw new Error("Expected the field `owner_id` to be a primitive type in the JSON string but got " + data['owner_id']);
        }
        // validate the optional field `sip`
        if (data['sip']) { // data not null
          ServiceVOIPDeviceAddEdit3a.validateJSON(data['sip']);
        }

        return true;
    }


}

ServiceVOIPDeviceAddEdit2.RequiredProperties = ["name", "sip"];

/**
 * @member {module:model/ServiceCallForward} call_forward
 */
ServiceVOIPDeviceAddEdit2.prototype['call_forward'] = undefined;

/**
 * @member {module:model/ServiceCallRecordingSettings} call_recording
 */
ServiceVOIPDeviceAddEdit2.prototype['call_recording'] = undefined;

/**
 * @member {module:model/ServiceVOIPDeviceAddEdit3c} caller_id
 */
ServiceVOIPDeviceAddEdit2.prototype['caller_id'] = undefined;

/**
 * @member {module:model/ServiceVOIPDeviceAddEdit2.DeviceTypeEnum} device_type
 */
ServiceVOIPDeviceAddEdit2.prototype['device_type'] = undefined;

/**
 * @member {module:model/ServiceVOIPSharedDoNotDisturb} do_not_disturb
 */
ServiceVOIPDeviceAddEdit2.prototype['do_not_disturb'] = undefined;

/**
 * cannot use required, else it has to be true and false is not allowed
 * @member {Boolean} enabled
 */
ServiceVOIPDeviceAddEdit2.prototype['enabled'] = undefined;

/**
 * dont use mac, it enforces :, which voip does not like
 * @member {String} mac_address
 */
ServiceVOIPDeviceAddEdit2.prototype['mac_address'] = undefined;

/**
 * @member {module:model/ServiceMusicOnHold} music_on_hold
 */
ServiceVOIPDeviceAddEdit2.prototype['music_on_hold'] = undefined;

/**
 * @member {String} name
 */
ServiceVOIPDeviceAddEdit2.prototype['name'] = undefined;

/**
 * json omitempty is needed else voip fails on \"\" for owner_id
 * @member {String} owner_id
 */
ServiceVOIPDeviceAddEdit2.prototype['owner_id'] = undefined;

/**
 * @member {module:model/ServiceVOIPDeviceAddEdit3a} sip
 */
ServiceVOIPDeviceAddEdit2.prototype['sip'] = undefined;





/**
 * Allowed values for the <code>device_type</code> property.
 * @enum {String}
 * @readonly
 */
ServiceVOIPDeviceAddEdit2['DeviceTypeEnum'] = {

    /**
     * value: "softphone"
     * @const
     */
    "softphone": "softphone",

    /**
     * value: "sip_uri"
     * @const
     */
    "sip_uri": "sip_uri"
};



export default ServiceVOIPDeviceAddEdit2;

