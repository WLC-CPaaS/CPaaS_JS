/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import java.util.Objects;
import java.util.Arrays;

/**
 * ServiceVOIPDeviceAddEdit3a
 */
@.annotation.Generated(value = "org.openapitools.codegen.languages.JavascriptClientCodegen", comments = "Generator version: 7.11.0-SNAPSHOT")
public class ServiceVOIPDeviceAddEdit3a {
  /**
   * Gets or Sets inviteFormat
   */
  public enum InviteFormatEnum {
    username(String.valueOf("username"));

    private String value;

    InviteFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InviteFormatEnum fromValue(String value) {
      for (InviteFormatEnum b : InviteFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  @.annotation.Nonnull
  private InviteFormatEnum inviteFormat;

  @.annotation.Nullable
  private String password;

  @.annotation.Nonnull
  private String username;

  public ServiceVOIPDeviceAddEdit3a() {
  }

  public ServiceVOIPDeviceAddEdit3a inviteFormat(@.annotation.Nonnull InviteFormatEnum inviteFormat) {
    
    this.inviteFormat = inviteFormat;
    return this;
  }

  /**
   * Get inviteFormat
   * @return inviteFormat
   */
  @.annotation.Nonnull

  public InviteFormatEnum getInviteFormat() {
    return inviteFormat;
  }


  public void setInviteFormat(@.annotation.Nonnull InviteFormatEnum inviteFormat) {
    this.inviteFormat = inviteFormat;
  }

  public ServiceVOIPDeviceAddEdit3a password(@.annotation.Nullable String password) {
    
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @.annotation.Nullable

  public String getPassword() {
    return password;
  }


  public void setPassword(@.annotation.Nullable String password) {
    this.password = password;
  }

  public ServiceVOIPDeviceAddEdit3a username(@.annotation.Nonnull String username) {
    
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @.annotation.Nonnull

  public String getUsername() {
    return username;
  }


  public void setUsername(@.annotation.Nonnull String username) {
    this.username = username;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceVOIPDeviceAddEdit3a serviceVOIPDeviceAddEdit3a = (ServiceVOIPDeviceAddEdit3a) o;
    return Objects.equals(this.inviteFormat, serviceVOIPDeviceAddEdit3a.inviteFormat) &&
        Objects.equals(this.password, serviceVOIPDeviceAddEdit3a.password) &&
        Objects.equals(this.username, serviceVOIPDeviceAddEdit3a.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inviteFormat, password, username);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceVOIPDeviceAddEdit3a {\n");
    sb.append("    inviteFormat: ").append(toIndentedString(inviteFormat)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

