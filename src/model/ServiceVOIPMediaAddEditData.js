/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceTTS from './ServiceTTS';

/**
 * The ServiceVOIPMediaAddEditData model module.
 * @module model/ServiceVOIPMediaAddEditData
 * @version 1.1
 */
class ServiceVOIPMediaAddEditData {
    /**
     * Constructs a new <code>ServiceVOIPMediaAddEditData</code>.
     * @alias module:model/ServiceVOIPMediaAddEditData
     * @param name {String} 
     */
    constructor(name) { 
        
        ServiceVOIPMediaAddEditData.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>ServiceVOIPMediaAddEditData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceVOIPMediaAddEditData} obj Optional instance to populate.
     * @return {module:model/ServiceVOIPMediaAddEditData} The populated <code>ServiceVOIPMediaAddEditData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceVOIPMediaAddEditData();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('media_source')) {
                obj['media_source'] = ApiClient.convertToType(data['media_source'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tts')) {
                obj['tts'] = ServiceTTS.constructFromObject(data['tts']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceVOIPMediaAddEditData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceVOIPMediaAddEditData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ServiceVOIPMediaAddEditData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['media_source'] && !(typeof data['media_source'] === 'string' || data['media_source'] instanceof String)) {
            throw new Error("Expected the field `media_source` to be a primitive type in the JSON string but got " + data['media_source']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `tts`
        if (data['tts']) { // data not null
          ServiceTTS.validateJSON(data['tts']);
        }

        return true;
    }


}

ServiceVOIPMediaAddEditData.RequiredProperties = ["name"];

/**
 * @member {String} description
 */
ServiceVOIPMediaAddEditData.prototype['description'] = undefined;

/**
 * @member {module:model/ServiceVOIPMediaAddEditData.MediaSourceEnum} media_source
 */
ServiceVOIPMediaAddEditData.prototype['media_source'] = undefined;

/**
 * @member {String} name
 */
ServiceVOIPMediaAddEditData.prototype['name'] = undefined;

/**
 * @member {module:model/ServiceTTS} tts
 */
ServiceVOIPMediaAddEditData.prototype['tts'] = undefined;





/**
 * Allowed values for the <code>media_source</code> property.
 * @enum {String}
 * @readonly
 */
ServiceVOIPMediaAddEditData['MediaSourceEnum'] = {

    /**
     * value: "upload"
     * @const
     */
    "upload": "upload",

    /**
     * value: "recording"
     * @const
     */
    "recording": "recording",

    /**
     * value: "tts"
     * @const
     */
    "tts": "tts"
};



export default ServiceVOIPMediaAddEditData;

