/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WhiteLabelCommunicationsCPaasApiDocumentation);
  }
}(this, function(expect, WhiteLabelCommunicationsCPaasApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WhiteLabelCommunicationsCPaasApiDocumentation.AccountApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountApi', function() {
    describe('v1AccountAccountidChildrenGet', function() {
      it('should call v1AccountAccountidChildrenGet successfully', function(done) {
        //uncomment below and update the code to test v1AccountAccountidChildrenGet
        //instance.v1AccountAccountidChildrenGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AccountAccountidDelete', function() {
      it('should call v1AccountAccountidDelete successfully', function(done) {
        //uncomment below and update the code to test v1AccountAccountidDelete
        //instance.v1AccountAccountidDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AccountAccountidDnsrecordGet', function() {
      it('should call v1AccountAccountidDnsrecordGet successfully', function(done) {
        //uncomment below and update the code to test v1AccountAccountidDnsrecordGet
        //instance.v1AccountAccountidDnsrecordGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AccountAccountidDnsrecordPost', function() {
      it('should call v1AccountAccountidDnsrecordPost successfully', function(done) {
        //uncomment below and update the code to test v1AccountAccountidDnsrecordPost
        //instance.v1AccountAccountidDnsrecordPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AccountAccountidDnsrecordPut', function() {
      it('should call v1AccountAccountidDnsrecordPut successfully', function(done) {
        //uncomment below and update the code to test v1AccountAccountidDnsrecordPut
        //instance.v1AccountAccountidDnsrecordPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AccountAccountidGet', function() {
      it('should call v1AccountAccountidGet successfully', function(done) {
        //uncomment below and update the code to test v1AccountAccountidGet
        //instance.v1AccountAccountidGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AccountAccountidLimitGet', function() {
      it('should call v1AccountAccountidLimitGet successfully', function(done) {
        //uncomment below and update the code to test v1AccountAccountidLimitGet
        //instance.v1AccountAccountidLimitGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AccountAccountidLimitPut', function() {
      it('should call v1AccountAccountidLimitPut successfully', function(done) {
        //uncomment below and update the code to test v1AccountAccountidLimitPut
        //instance.v1AccountAccountidLimitPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AccountAccountidPost', function() {
      it('should call v1AccountAccountidPost successfully', function(done) {
        //uncomment below and update the code to test v1AccountAccountidPost
        //instance.v1AccountAccountidPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AccountAccountidPut', function() {
      it('should call v1AccountAccountidPut successfully', function(done) {
        //uncomment below and update the code to test v1AccountAccountidPut
        //instance.v1AccountAccountidPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AccountApikeyGet', function() {
      it('should call v1AccountApikeyGet successfully', function(done) {
        //uncomment below and update the code to test v1AccountApikeyGet
        //instance.v1AccountApikeyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AccountGet', function() {
      it('should call v1AccountGet successfully', function(done) {
        //uncomment below and update the code to test v1AccountGet
        //instance.v1AccountGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v1AccountPost', function() {
      it('should call v1AccountPost successfully', function(done) {
        //uncomment below and update the code to test v1AccountPost
        //instance.v1AccountPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
