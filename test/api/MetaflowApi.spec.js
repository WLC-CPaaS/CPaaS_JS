/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api;

import .ApiException;
import ServiceDocMetaflowGet;
import ServiceVOIPMetaflowAddData;
import UtilCPAASError;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MetaflowApi
 */
class MetaflowApiTest {

    private final MetaflowApi api = new MetaflowApi();

    /**
     * Delete Device Metaflow
     *
     * Delete all metaflows associated with a device.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1AccountAccountIDDeviceDeviceIDMetaflowDeleteTest() throws ApiException {
        //
        //String accountID = null;
        //
        //String deviceID = null;
        //
        //ServiceDocMetaflowGet response = api.v1AccountAccountIDDeviceDeviceIDMetaflowDelete(accountID, deviceID);

        // TODO: test validations
    }
    /**
     * Get Device Metaflow List
     *
     * Get the list of metaflows for a device.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1AccountAccountIDDeviceDeviceIDMetaflowGetTest() throws ApiException {
        //
        //String accountID = null;
        //
        //String deviceID = null;
        //
        //ServiceDocMetaflowGet response = api.v1AccountAccountIDDeviceDeviceIDMetaflowGet(accountID, deviceID);

        // TODO: test validations
    }
    /**
     * Create Device Metaflow
     *
     * Create a metaflow or multiple metaflows for a device.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1AccountAccountIDDeviceDeviceIDMetaflowPostTest() throws ApiException {
        //
        //String accountID = null;
        //
        //String deviceID = null;
        //
        //ServiceVOIPMetaflowAddData reqBody = null;
        //
        //ServiceDocMetaflowGet response = api.v1AccountAccountIDDeviceDeviceIDMetaflowPost(accountID, deviceID, reqBody);

        // TODO: test validations
    }
    /**
     * Delete Account Metaflow
     *
     * Remove all metaflows from an account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1AccountAccountIDMetaflowDeleteTest() throws ApiException {
        //
        //String accountID = null;
        //
        //ServiceDocMetaflowGet response = api.v1AccountAccountIDMetaflowDelete(accountID);

        // TODO: test validations
    }
    /**
     * Get Account Metaflow List
     *
     * Get an account&#39;s metaflow list.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1AccountAccountIDMetaflowGetTest() throws ApiException {
        //
        //String accountID = null;
        //
        //ServiceDocMetaflowGet response = api.v1AccountAccountIDMetaflowGet(accountID);

        // TODO: test validations
    }
    /**
     * Create Account Metaflow
     *
     * Generate a metaflow for an account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1AccountAccountIDMetaflowPostTest() throws ApiException {
        //
        //String accountID = null;
        //
        //ServiceVOIPMetaflowAddData metaflow = null;
        //
        //ServiceDocMetaflowGet response = api.v1AccountAccountIDMetaflowPost(accountID, metaflow);

        // TODO: test validations
    }
    /**
     * Delete User Metaflow
     *
     * Delete all metaflows associated with a user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1AccountAccountIDUserUserIDMetaflowDeleteTest() throws ApiException {
        //
        //String accountID = null;
        //
        //String userID = null;
        //
        //ServiceDocMetaflowGet response = api.v1AccountAccountIDUserUserIDMetaflowDelete(accountID, userID);

        // TODO: test validations
    }
    /**
     * Get User Metaflow List
     *
     * Get the list of metaflows for a user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1AccountAccountIDUserUserIDMetaflowGetTest() throws ApiException {
        //
        //String accountID = null;
        //
        //String userID = null;
        //
        //ServiceDocMetaflowGet response = api.v1AccountAccountIDUserUserIDMetaflowGet(accountID, userID);

        // TODO: test validations
    }
    /**
     * Create User Metaflow
     *
     * Add a metaflow or multiple metaflows for a user in an account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1AccountAccountIDUserUserIDMetaflowPostTest() throws ApiException {
        //
        //String accountID = null;
        //
        //String userID = null;
        //
        //ServiceVOIPMetaflowAddData reqBody = null;
        //
        //ServiceDocMetaflowGet response = api.v1AccountAccountIDUserUserIDMetaflowPost(accountID, userID, reqBody);

        // TODO: test validations
    }
}
