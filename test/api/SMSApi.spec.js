/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package api;

import .ApiException;
import ServiceCampaignTagDetagPhonenumbers;
import ServiceDocsCampaignImportOutput;
import ServiceDocsCampaignImportedGetAllOutput;
import ServiceDocsCampaignPhoneNumberOutput;
import ServiceDocsCampaignTagDetagPhonenumbersOutput;
import UtilCPAASError;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SMSApi
 */
class SMSApiTest {

    private final SMSApi api = new SMSApi();

    /**
     * Get details about a single imported campaign in an account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1SmsAccountAccountIDCampaignCampaignIDImportGetTest() throws ApiException {
        //
        //String accountID = null;
        //
        //String campaignID = null;
        //
        //ServiceDocsCampaignImportOutput response = api.v1SmsAccountAccountIDCampaignCampaignIDImportGet(accountID, campaignID);

        // TODO: test validations
    }
    /**
     * Import campaign
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1SmsAccountAccountIDCampaignCampaignIDImportPostTest() throws ApiException {
        //
        //String accountID = null;
        //
        //String campaignID = null;
        //
        //ServiceDocsCampaignImportOutput response = api.v1SmsAccountAccountIDCampaignCampaignIDImportPost(accountID, campaignID);

        // TODO: test validations
    }
    /**
     * Get telephone numbers associated with a campaign.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1SmsAccountAccountIDCampaignCampaignIDPhonenumberGetTest() throws ApiException {
        //
        //String accountID = null;
        //
        //String campaignID = null;
        //
        //Number pageNum = null;
        //
        //Number pageSize = null;
        //
        //ServiceDocsCampaignPhoneNumberOutput response = api.v1SmsAccountAccountIDCampaignCampaignIDPhonenumberGet(accountID, campaignID, pageNum, pageSize);

        // TODO: test validations
    }
    /**
     * Associate or dissociate telephone numbers with a campaign.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1SmsAccountAccountIDCampaignCampaignIDPhonenumberPutTest() throws ApiException {
        //
        //String accountID = null;
        //
        //String campaignID = null;
        //
        //ServiceCampaignTagDetagPhonenumbers reqBody = null;
        //
        //ServiceDocsCampaignTagDetagPhonenumbersOutput response = api.v1SmsAccountAccountIDCampaignCampaignIDPhonenumberPut(accountID, campaignID, reqBody);

        // TODO: test validations
    }
    /**
     * Get a list of all imported campaigns in an account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    void v1SmsAccountAccountIDCampaignImportGetTest() throws ApiException {
        //
        //String accountID = null;
        //
        //Number pageNum = null;
        //
        //Number pageSize = null;
        //
        //ServiceDocsCampaignImportedGetAllOutput response = api.v1SmsAccountAccountIDCampaignImportGet(accountID, pageNum, pageSize);

        // TODO: test validations
    }
}
