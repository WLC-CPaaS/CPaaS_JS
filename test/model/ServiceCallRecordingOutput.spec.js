/*
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package model;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ServiceCallRecordingOutput
 */
class ServiceCallRecordingOutputTest {
    private final ServiceCallRecordingOutput model = new ServiceCallRecordingOutput();

    /**
     * Model tests for ServiceCallRecordingOutput
     */
    @Test
    void testServiceCallRecordingOutput() {
        // TODO: test ServiceCallRecordingOutput
    }

    /**
     * Test the property 'callId'
     */
    @Test
    void callIdTest() {
        // TODO: test callId
    }

    /**
     * Test the property 'calleeIdName'
     */
    @Test
    void calleeIdNameTest() {
        // TODO: test calleeIdName
    }

    /**
     * Test the property 'calleeIdNumber'
     */
    @Test
    void calleeIdNumberTest() {
        // TODO: test calleeIdNumber
    }

    /**
     * Test the property 'callerIdName'
     */
    @Test
    void callerIdNameTest() {
        // TODO: test callerIdName
    }

    /**
     * Test the property 'callerIdNumber'
     */
    @Test
    void callerIdNumberTest() {
        // TODO: test callerIdNumber
    }

    /**
     * Test the property 'cdrId'
     */
    @Test
    void cdrIdTest() {
        // TODO: test cdrId
    }

    /**
     * Test the property 'contentType'
     */
    @Test
    void contentTypeTest() {
        // TODO: test contentType
    }

    /**
     * Test the property 'customChannelVars'
     */
    @Test
    void customChannelVarsTest() {
        // TODO: test customChannelVars
    }

    /**
     * Test the property 'description'
     */
    @Test
    void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'direction'
     */
    @Test
    void directionTest() {
        // TODO: test direction
    }

    /**
     * Test the property 'duration'
     */
    @Test
    void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'durationMs'
     */
    @Test
    void durationMsTest() {
        // TODO: test durationMs
    }

    /**
     * Test the property 'endpointId'
     */
    @Test
    void endpointIdTest() {
        // TODO: test endpointId
    }

    /**
     * Test the property 'from'
     */
    @Test
    void fromTest() {
        // TODO: test from
    }

    /**
     * Test the property 'id'
     */
    @Test
    void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'interactionId'
     */
    @Test
    void interactionIdTest() {
        // TODO: test interactionId
    }

    /**
     * Test the property 'mediaSource'
     */
    @Test
    void mediaSourceTest() {
        // TODO: test mediaSource
    }

    /**
     * Test the property 'mediaType'
     */
    @Test
    void mediaTypeTest() {
        // TODO: test mediaType
    }

    /**
     * Test the property 'name'
     */
    @Test
    void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'origin'
     */
    @Test
    void originTest() {
        // TODO: test origin
    }

    /**
     * Test the property 'ownerId'
     */
    @Test
    void ownerIdTest() {
        // TODO: test ownerId
    }

    /**
     * Test the property 'request'
     */
    @Test
    void requestTest() {
        // TODO: test request
    }

    /**
     * Test the property 'sourceType'
     */
    @Test
    void sourceTypeTest() {
        // TODO: test sourceType
    }

    /**
     * Test the property 'start'
     */
    @Test
    void startTest() {
        // TODO: test start
    }

    /**
     * Test the property 'to'
     */
    @Test
    void toTest() {
        // TODO: test to
    }

    /**
     * Test the property 'url'
     */
    @Test
    void urlTest() {
        // TODO: test url
    }

}
