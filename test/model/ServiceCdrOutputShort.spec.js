/**
 * White Label Communications CPaas API Documentation
 * A CPaaS platform API
 *
 * The version of the OpenAPI document: 1.1
 * Contact: support@whitelabelcomm.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.WhiteLabelCommunicationsCPaasApiDocumentation);
  }
}(this, function(expect, WhiteLabelCommunicationsCPaasApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ServiceCdrOutputShort', function() {
    it('should create an instance of ServiceCdrOutputShort', function() {
      // uncomment below and update the code to test ServiceCdrOutputShort
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be.a(WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort);
    });

    it('should have the property authorizingId (base name: "authorizing_id")', function() {
      // uncomment below and update the code to test the property authorizingId
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property billingSeconds (base name: "billing_seconds")', function() {
      // uncomment below and update the code to test the property billingSeconds
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property bridgeId (base name: "bridge_id")', function() {
      // uncomment below and update the code to test the property bridgeId
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property callId (base name: "call_id")', function() {
      // uncomment below and update the code to test the property callId
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property callPriority (base name: "call_priority")', function() {
      // uncomment below and update the code to test the property callPriority
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property callType (base name: "call_type")', function() {
      // uncomment below and update the code to test the property callType
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property calleeIdName (base name: "callee_id_name")', function() {
      // uncomment below and update the code to test the property calleeIdName
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property calleeIdNumber (base name: "callee_id_number")', function() {
      // uncomment below and update the code to test the property calleeIdNumber
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property callerIdName (base name: "caller_id_name")', function() {
      // uncomment below and update the code to test the property callerIdName
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property callerIdNumber (base name: "caller_id_number")', function() {
      // uncomment below and update the code to test the property callerIdNumber
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property callingFrom (base name: "calling_from")', function() {
      // uncomment below and update the code to test the property callingFrom
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property cost (base name: "cost")', function() {
      // uncomment below and update the code to test the property cost
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property dialedNumber (base name: "dialed_number")', function() {
      // uncomment below and update the code to test the property dialedNumber
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property direction (base name: "direction")', function() {
      // uncomment below and update the code to test the property direction
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property durationSeconds (base name: "duration_seconds")', function() {
      // uncomment below and update the code to test the property durationSeconds
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property from (base name: "from")', function() {
      // uncomment below and update the code to test the property from
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property hangupCause (base name: "hangup_cause")', function() {
      // uncomment below and update the code to test the property hangupCause
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property interactionId (base name: "interaction_id")', function() {
      // uncomment below and update the code to test the property interactionId
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property mediaRecordings (base name: "media_recordings")', function() {
      // uncomment below and update the code to test the property mediaRecordings
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property mediaServer (base name: "media_server")', function() {
      // uncomment below and update the code to test the property mediaServer
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property otherLegCallId (base name: "other_leg_call_id")', function() {
      // uncomment below and update the code to test the property otherLegCallId
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property ownerId (base name: "owner_id")', function() {
      // uncomment below and update the code to test the property ownerId
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property rate (base name: "rate")', function() {
      // uncomment below and update the code to test the property rate
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property rateName (base name: "rate_name")', function() {
      // uncomment below and update the code to test the property rateName
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property recordingUrl (base name: "recording_url")', function() {
      // uncomment below and update the code to test the property recordingUrl
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property request (base name: "request")', function() {
      // uncomment below and update the code to test the property request
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property timestampDatetime (base name: "timestamp_datetime")', function() {
      // uncomment below and update the code to test the property timestampDatetime
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

    it('should have the property to (base name: "to")', function() {
      // uncomment below and update the code to test the property to
      //var instance = new WhiteLabelCommunicationsCPaasApiDocumentation.ServiceCdrOutputShort();
      //expect(instance).to.be();
    });

  });

}));
